{"version":3,"sources":["CanvasBoxLine.coffee"],"names":[],"mappings":"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","file":"CanvasBoxLine.js","sourceRoot":"/source/","sourcesContent":["Load.CanvasBoxConnector();\nclass CanvasBoxLine extends CanvasBoxConnector\n\n  intMass: 1\n  \n  ###\n  # The circle of drag and drop side size\n  ###\n  side: 1\n\n  ###\n  # The circle of drag and drop side size\n  ###\n  hoverSide: 5\n\n  ###\n  # The circle of drag and drop side size\n  ###\n  shaddow: 20\n\n  shaddowColor: \"rgba(100,100,100,0.5)\"\n\n  hoverDistance: 10\n\n  ###\n  # The X Position of the Draggable Element\n  ###\n  x: 0\n\n  ###\n  # The Y Position of the Draggable Element\n  ###\n  y: 0\n\n  ###\n  # The X Position of the Dot in the Start\n  ###\n  x0: 0\n\n  ###\n  # The X Position of the Dot in the End\n  ###\n  x1: 0\n\n  ###\n  # The X speed\n  ###\n  dx: 0\n\n  ###\n  # The Y Position of the Dot in the Start\n  ###\n  y0: 0\n\n  ###\n  # The Y Position of the Dot in the End\n  ###\n  y1: 0\n  \n  ###\n  # The Y speed\n  ###\n  dy: 0\n\n  ###\n  # Color of the Draggable Element\n  ###\n  draggableColor: \"rgb( 200, 200, 220 )\"\n\n  ###\n  # Color of the Draggable Element\n  ###\n  draggableBorderColor: \"rgb( 200, 200, 220 )\"\n\n  ###\n  # line Style, color, transparency, etc.\n  ###\n  strokeStyle: \"rgb( 200, 200, 220 )\"\n\n  ###\n  # fill Style, color, transparency, etc.\n  ###\n  fillStyle: \"rgb( 100, 100, 220 )\"\n\n  ###\n  # Line Width\n  ###\n  width: 3\n\n  ###\n  # Class Name\n  ###\n  strClassName: \"CanvasBoxLine\"\n\n  ###\n  # Color\n  ###\n  color: \"black\"\n\n  ###\n  # Text\n  ###\n  strText: null\n  \n  ###\n  # Create the serialize object witch describe the canvas box line\n  ###\n  toSerialize:()->\n    objResult =\n      side: @side\n      x0: @x0\n      x1: @x1\n      dx: @dx\n      y0: @y0\n      y1: @y1\n      dy: @dy\n      draggableColor: @draggableColor,\n      draggableBorderColor: @draggableBorderColor,\n      strokeStyle: @strokeStyle,\n      width: @width,\n      strClassName: @strClassName\n    return objResult;\n\n  ###\n  # Get the vector ( pointer, distance and the angle )\n  # based on the received element\n  # @objElement CanvasBoxElement\n  ###\n  getVectorFromElement:( objElement  )->\n    objPointer = @findArrow( objElement , @side );\n    dblAngle = objPointer.degree * 2 * Math.PI / 360;\n    dblReverseAngle = Math.PI * 2 - dblAngle;\n    intDistance = Math.abs( Math.cos( dblAngle ) ) * objElement.height / 2 ;\n    intDistance += Math.abs( Math.sin( dblAngle ) ) * objElement.width / 2 ;\n\n    return (\n      pointer: objPointer ,\n      distance: intDistance ,\n      angle: dblAngle ,\n      reverseAngle: dblReverseAngle\n    );\n    \n  ###\n  # Rotate the context based on the received vector\n  # @param objVector Vector\n  ###\n  rotateVector:( objVector )->\n    @objBox.restoreContext();\n    @objBox.moveTo( objVector.pointer.x , objVector.pointer.y );\n    @objBox.saveContext();\n    @objBox.translate( objVector.pointer.x , objVector.pointer.y );\n    @objBox.rotate( objVector.reverseAngle );\n    @objBox.translate(\n      0\n      , \n      objVector.distance\n    );\n\n  ###\n  # Create the Connector in the From side of the line\n  ###\n  createConnectorFrom:()->\n    objVector = @getVectorFromElement( @objElementFrom );\n    # @objBox.saveContext();\n    @rotateVector( objVector )\n    @drawConnectorFrom( objVector.pointer , @side );\n    @objBox.restoreContext();\n        \n  ###\n  # Create the Connector in the To side of the line\n  ###\n  createConnectorTo:()->\n    objVector = @getVectorFromElement( @objElementTo );\n    @rotateVector( objVector )\n    @drawConnectorTo( objVector.pointer , @side );\n    @objBox.restoreContext();\n\n  ###\n  # Draw the Connector in the From side of the line\n  ###    \n  drawConnectorFrom:( objPointer , intSide )->\n    @drawBackgroundCircle( intSide );\n    @objBox.setFillStyle( @fillStyle );\n    @objBox.setStrokeStyle( @strokeStyle );\n    @objBox.beginPath();\n    @drawArrowFrom( intSide );\n    @objBox.fill();\n    @objBox.stroke();\n\n  ###\n  # Draw the Connector in the To side of the line\n  ###\n  drawConnectorTo:( objPointer , intSide )->\n    @drawBackgroundCircle( intSide );\n    @objBox.setFillStyle( @fillStyle );\n    @objBox.setStrokeStyle( @strokeStyle );\n    @objBox.beginPath();\n    @drawArrowTo( intSide );\n    @objBox.fill();\n    @objBox.stroke();\n\n  ###\n  # Draw the Background Circle\n  ###\n  drawBackgroundCircle:( intSide )->\n    this.objBox.beginPath();\n    this.objBox.setFillStyle( this.objBox.backgroundColor );\n    this.objBox.setStrokeStyle( \"rgb( 0 , 0, 0 )\");\n    this.objBox.arc( 0 , 0 , @shaddow , 0 ,  Math.PI  , true );\n    this.objBox.fill();\n\n  ###\n  # Refresh the X0,Y0,X1,Y1 based on the X and Y and Side\n  # Draw everything in the new place\n  ###\n  refresh:()->\n    @x0 = @x - ( @side / 2 );\n    @x1 = @x + ( @side / 2 );\n    @y0 = @y - ( @side / 2 );\n    @y1 = @y + ( @side / 2 );\n    if( @x0 < 0 )\n      @x += @side;\n      return @refresh();\n\n    if( @y0 < 0 )\n      @y += @side;\n      return @refresh();\n\n    @width = @side;\n    @height = @side;\n\n  drawLine:( intXfrom, intYfrom, intXto, intYto )->\n    @objBox.drawLine( intXfrom, intYfrom, intXto, intYto )\n    \n  drawQuadraticLine:( intXfrom, intYfrom, intXto, intYto , intXCurve, intYCurve )->\n    @objBox.drawBezierLine( intXfrom, intYfrom, intXto, intYto, intXCurve, intYCurve)\n  \n  getMouseDistance:()->\n    dblDiffX = ( @objBox.mouseX - @x )\n    dblDiffY = ( @objBox.mouseY - @y )\n    dblDiffX = dblDiffX * dblDiffX\n    dblDiffY = dblDiffY * dblDiffY\n    return Math.round( Math.sqrt( dblDiffX + dblDiffY ) )\n\n  drawAnchor:()->\n    @objBox.saveContext();\n\n    @objBox.setFillStyle( @color );\n    @objBox.setStrokeStyle( @strokeStyle );\n    @objBox.moveTo( @x , @y );\n\n    \n    dblMouseDistance = @getMouseDistance() / 8\n\n    shaddowArc = 0\n\n    if  dblMouseDistance < @hoverDistance\n      shaddowArc = @hoverDistance - dblMouseDistance\n\n    if  @mouseOver or\n        @objBox.objElementClicked == this or\n        @objBox.objElementClicked == @objElementFrom or\n        @objBox.objElementClicked == @objElementTo\n      shaddowArc = @hoverDistance\n      \n    if shaddowArc > 0\n      @objBox.beginPath();\n      @objBox.setFillStyle( @shaddowColor );\n      @objBox.arc( @x , @y , shaddowArc , 0 ,  Math.PI * 2 , true );\n      @objBox.fill();\n\n\n    @objBox.closePath();\n    @objBox.restoreContext();\n\n  drawLines:()->\n    @objBox.saveContext();\n    @objBox.moveTo( @x , @y );\n    @objBox.setStrokeStyle( @strokeStyle );\n    @objBox.setFillStyle( @color );\n#    @drawQuadraticLine( @x , @y , @objElementFrom.x , @objElementFrom.y , @objElementTo.x , @objElementTo.y );\n    @drawQuadraticLine( @objElementFrom.x , @objElementFrom.y , @objElementTo.x , @objElementTo.y , @x , @y );\n    @objBox.stroke();\n    @objBox.restoreContext();\n  \n  draw:()-> \n    if( @objElementFrom == null )\n      throw new CanvasBoxException( \"Canvas Box Line has no Element From\" );\n      \n    if( @objElementTo == null )\n      throw new CanvasBoxException( \"Canvas Box Line has no Element To\" );\n      \n    @refresh()\n    @drawLines()\n    @drawAnchor()\n    @drawText()\n    @createConnectorFrom()\n    @createConnectorTo()\n\n\n  drawArrowTo:( intSide )->\n\n  drawArrowFrom:( intSide )->\n\n  drawText:()->\n    return null unless @strText?\n\n    @objBox.setFillStyle( \"black\" );\n    @objBox.setFont( \"Arial 40px\" );\n    @objBox.fillText( @strText, @x, @y )\n\n  findArrow:( objBoxElement , intSide )->\n    intDegree = Math.round( 180 + 180 * Math.atan2( objBoxElement.x - @x , objBoxElement.y - @y ) / Math.PI );\n    return (\n      degree: intDegree\n      x: objBoxElement.x\n      y:  objBoxElement.y\n    )\n\n  isInside:( mouseX , mouseY )->\n    @refresh();\n    if (  ( mouseX >= @x0 ) and \n          ( mouseX <= @x1 ) and \n          ( mouseY >= @y0 ) and\n          ( mouseY <= @y1 ) )\n      return true;\n    \n    dblMouseDistance = @getMouseDistance()\n\n    if( dblMouseDistance < @hoverDistance )\n      return true\n\n    return false;\n\n  drawMouseOver:( event )->\n    if( !@defaultSide )\n      @defaultSide = @side\n    @side = 6;\n\n  drawFixed:( boolFixed )->\n    if( !@defaultColor )\n      @defaultColor = @color\n\n    if( boolFixed )\n#      @color = \"rgb( 100 , 100 , 200 )\"\n      @borderWidth *= 3\n      @side = @defaultSide\n    else\n#      @color = @defaultColor\n      @borderWidth = 1\n      @side = @defaultSide\n\n  drawMouseOut:( event )->\n    @side = @defaultSide\n    \n  onDraw:()->\n    @draw();"]}