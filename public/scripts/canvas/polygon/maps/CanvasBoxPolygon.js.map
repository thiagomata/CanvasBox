{"version":3,"sources":["CanvasBoxPolygon.coffee"],"names":[],"mappings":"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","file":"CanvasBoxPolygon.js","sourceRoot":"/source/","sourcesContent":["##\n# Polygon shape what can be draw, rotate, checked positions, etc.\n#\n# @author Thiago Henrique Ramos da Mata <thiago.henrique.mata@gmail.com>\n##\nLoad.CanvasBoxElement();\nclass CanvasBoxPolygon extends CanvasBoxElement\n\n    ##\n    # Draw some elements to help debug  \n    ##\n    debug: false\n\n    ##\n    # Current Color\n    ##\n    color: null\n    \n    ##\n    # Square Border Color\n    ##\n    borderColor: null\n\n    ##\n    # Square Border Width\n    ##\n    borderWidth: 1\n\n    ##\n    #   Rotate the element 0⁰\n    ##\n    dblRotate: 0\n\n    ##\n    # All the points of the polygon\n    # @type Point[]\n    ##\n    arrPoints: null\n\n    ##\n    # Class Name\n    ##\n    strClassName: \"Polygon\"\n\n    ##\n    # Initin the arrPoints into the constructor to solve the bug? of the \n    # singleton arrPoints\n    # @todo Make more tests to check if this is some kind of OOP implementation bug\n    ##\n    init:()->\n        super();\n        @arrPoints = new Array();\n\n    ##\n    # Serialize the important data of this element\n    # return Object\n    ##\n    toSerialize:->\n        objResult = super();\n        objResult.arrPoints = @serializePoints();\n        objResult.dblRotate = @dblRotate;\n        return objResult;\n\n    ##\n    # Get the serialized version of the Points\n    # @return Point[]\n    ##\n    serializePoints:->\n        arrSerializedPoints = new Array();\n        for objPoint in @arrPoints\n            if objPoint instanceof CanvasBoxPointer\n                objSerialPoint = objPoint.toSerialize();\n            else\n                objSerialPoint = objPoint;\n            arrSerializedPoints.push( objSerialPoint );\n\n        return arrSerializedPoints;\n\n    ##\n    # Get the Points Colections rotated\n    #\n    # @return Point[]\n    ##\n    getRotatedPoints:()->\n        arrRotatedPoints = new Array();\n        for objPoint in @arrPoints\n            arrRotatedPoints.push( @rotatePoint( objPoint ) );\n        return arrRotatedPoints;\n    \n    ##\n    # Add some element into the end of the polygon\n    # @param Point\n    # @return boolean\n    ##\n    addPoint:( objPoint )->\n        objPoint.position = @arrPoints.length;\n        @arrPoints.push( objPoint );\n        return this;\n\n    ##\n    # Draw the polygon\n    #\n    # Navigation into all the points of polygon, in order drawing it, stroking \n    # and filling it\n    ##\n    draw:->\n        if( @arrPoints.length < 2 )\n            return super();\n        @changeContext();\n        @objBox.setFillStyle( @color );\n        @objBox.setStrokeStyle( @borderColor );\n        @objBox.lineWidth = \"#{@borderWidth}px\";\n\n        arrPoints = @getRotatedPoints();\n        objFirstPoint = arrPoints[0];\n\n        @objBox.beginPath();\n\n        for objPoint , intKey in @arrPoints\n            objNextPoint = @arrPoints[ ( intKey + 1 ) % @arrPoints.length ]\n            objPrevious = @arrPoints[ ( intKey - 1 + @arrPoints.length ) % @arrPoints.length ]\n\n            if( intKey == 0 )\n                @objBox.moveTo(\n                    (  objPoint.x ) , \n                    (  objPoint.y ) );\n\n            if objPoint instanceof CanvasBoxPointer\n                @objBox.setStrokeStyle( objPoint.strokeStyle ) if objPoint.strokeStyle?;\n                @objBox.setLineWidth( objPoint.lineWidth ) if objPoint.lineWidth?;\n    \n            @objBox.lineTo(  objPoint.x ,  objPoint.y );\n\n\n        @objBox.fill();\n        @objBox.stroke();\n\n        if( @debug )\n            for objPoint , intKey in @arrPoints\n                objPrevious = @arrPoints[ ( intKey - 1 + @arrPoints.length ) % @arrPoints.length ]\n                if objPoint instanceof CanvasBoxPointer\n                    @objBox.setStrokeStyle( objPoint.strokeStyle ) if objPoint.strokeStyle?;\n                    @objBox.setLineWidth( objPoint.lineWidth ) if objPoint.lineWidth?;\n\n                    objBefore = @middle( objPrevious , objPoint );\n                    objAfter = @middle( objPoint , objNextPoint );\n                    @objBox.setStrokeStyle( \"black\" );\n                    @objBox.strokeText( intKey , objPoint.x , objPoint.y );\n\n        @restoreContext();\n        return this;\n    \n    ##\n    # Returns if the Mouse is Over the Element\n    #\n    # @param mouseX integer horizontal position of cursor pointer\n    # @param mouseY integer vertical position of the cursor pointer\n    # @return boolean\n    ## \n    isInsideElement:( mouseX , mouseY )->\n        objPoint = New.CanvasBoxPointer({x: mouseX , y: mouseY });\n        return @isInsidePolygon( objPoint );\n\n    ##\n    # Returns if the Point is inside the polygon\n    #\n    # @link http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n    # @link http://wiki.lazarus.freepascal.org/Geometry_in_Pascal#Checking_if_a_point_is_inside_a_polygon_.28integer_version.29\n    # @param Point objPoint\n    # @return boolean\n    ##\n    isInsidePolygon:( objPoint )->\n        objPoint.x = this.x - objPoint.x;\n        objPoint.y = this.y - objPoint.y;\n        arrRotatedPoints = @getRotatedPoints();\n        intQtdPoints = arrRotatedPoints.length;\n\n        if ( intQtdPoints < 3 )\n            return false;\n\n        booInside = false;\n\n        objLastPoint = arrRotatedPoints[ intQtdPoints - 1];\n        for objCurrentPoint , intKey in arrRotatedPoints\n\n            if( objCurrentPoint.x > objLastPoint.x )\n                objAPoint = objLastPoint; \n                objBPoint = objCurrentPoint;\n            else\n                objBPoint = objLastPoint; \n                objAPoint = objCurrentPoint;\n            \n            intCurrentDiffX = ( objCurrentPoint.x < objPoint.x );\n            intLastDiffX    = ( objPoint.x <= objLastPoint.x );\n            intDiffCABAY = Math.round( ( objPoint.y  - objAPoint.y ) * ( objBPoint.x - objAPoint.x ) ); \n            intDiffBACAY = Math.round( ( objBPoint.y - objAPoint.y ) * ( objPoint.x  - objAPoint.x ) ); \n\n            if (  ( intCurrentDiffX == intLastDiffX ) &&\n                  ( intDiffCABAY ) < ( intDiffBACAY ) )\n                booInside = !booInside;\n\n            objLastPoint = objCurrentPoint;\n        return booInside;\n\n\n    rotatePoint:( objPoint )->\n        intNewPositionX =  Math.round( Math.cos( @dblRotate ) * objPoint.x - Math.sin( -@dblRotate ) * objPoint.y );\n        intNewPositionY = -Math.round( Math.cos( @dblRotate ) * objPoint.y - Math.sin(  @dblRotate ) * objPoint.x );\n        return New.CanvasBoxPointer({ x: intNewPositionX , y: intNewPositionY });\n\n\n    ##\n    # smooth the polygon creating new middle elements\n    ##\n    smooth:->\n        arrNewPoints = new Array();\n        for objPoint , intKey in @arrPoints\n            objNextPoint = @arrPoints[ ( intKey + 1 ) % @arrPoints.length ];  \n            objBeforePoint = @arrPoints[ ( intKey - 1 + @arrPoints.length  ) % @arrPoints.length ];  \n            objMiddlePointAB = @middle( objBeforePoint , objPoint );\n            objMiddlePointBC = @middle( objPoint , objNextPoint );\n            objShadowB = @middle( objMiddlePointAB , objMiddlePointBC );\n            objNewB = @middle( objShadowB , objPoint );\n            arrNewPoints.push( objNewB );\n            arrNewPoints.push( objMiddlePointBC );\n        @arrPoints = arrNewPoints;\n\n    middle:(objPoint1,objPoint2)->\n        objPointResult = New.CanvasBoxPointer({\n                x: (objPoint1.x + objPoint2.x )/2\n                y: (objPoint1.y + objPoint2.y )/2\n            });\n        return objPointResult"]}