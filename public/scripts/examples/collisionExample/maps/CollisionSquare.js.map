{"version":3,"sources":["CollisionSquare.coffee"],"names":[],"mappings":"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","file":"CollisionSquare.js","sourceRoot":"/source/","sourcesContent":["##\n# Element to Test Collision.\n#\n# @author Thiago Henrique Ramos da Mata <thiago.henrique.mata@gmail.com>\n##\nLoad.CanvasBoxElement();\nclass CollisionSquare extends CanvasBoxElement\n\n    ##\n    # Size of each side of square\n    ##\n    side: 100\n\n    ##\n    # Regular Square Color\n    ##\n    colorRegular: \"rgb(150,150,250)\"\n\n    ##\n    # Mouse Over Square Color\n    ##\n    colorOver: \"yellow\"\n\n    ##\n    # Square Color on Drag Drop\n    ##\n    colorDrag: \"rgb(100,100,250)\"\n\n    ##\n    # Current Color\n    ##\n    color: null\n    \n    ##\n    # Square Border Color\n    ##\n    borderColorRegular: \"rgb(100,100,100)\"\n\n    ##\n    # Square Border Color\n    ##\n    borderColor: null\n\n    ##\n    # Square Border Color\n    ##\n    borderColorOver: \"rgb( 250 , 250, 250 )\"\n\n    ##\n    # Square Border Width\n    ##\n    borderWidth: 2\n        \n    ##\n    # Class Name\n    ##\n    strClassName: \"Square\"\n\n    ##\n    # Last Valid X\n    ##\n    intLastX: 0\n\n    ##\n    # Last Valid Y\n    ##\n    intLastY: 0\n\n    constructor:->\n        @color = @colorRegular\n        @borderColor = @borderColorRegular\n        return super();\n\n    ##\n    # Serialize the important data of this element\n    ##\n    toSerialize:->\n        objResult = super;\n        objResult.color = @color;\n        objResult.borderColor = @borderColor;\n        objResult.side = @side;        \n        return objResult;\n        \n    ###\n    # Draw the Square\n    # @return Square me\n    ###\n    draw:->\n        @refresh();\n        @objBox.setFillStyle( @color );\n        @objBox.fillRect( \n            Math.round( this.x - ( this.side / 2 ) ) , \n            Math.round( this.y - ( this.side / 2 ) ),\n            Math.round( this.side ) , \n            Math.round( this.side ) );\n        @objBox.setStrokeStyle( @borderColor );\n        @objBox.lineWidth = \"#{@borderWidth}px\";\n        @objBox.strokeRect( \n            Math.round( this.x - ( this.side / 2 ) ) , \n            Math.round( this.y - ( this.side / 2 ) ),\n            Math.round( this.side ) , \n            Math.round( this.side ) );\n        @objBox.setStrokeStyle( \"black\" ); \n        @objBox.strokeText( \"Drag and Drop\",@x - 30,@y);\n        return this;    \n\n    ##\n    # Mouse over event\n    ##\n    onMouseOver:( event )->\n        console.log( \"square over\" );\n        @borderColor = @borderColorOver;\n        @color = @colorOver;\n        return super( event );\n\n    ##\n    # Mouse out event\n    ##\n    onMouseOut:( event )->\n        @borderColor = @borderColorRegular;\n        @color = @colorRegular;\n        return super( event );\n\n    checkValidPosition:()->\n        if( @inCollision() )\n            @x = @lastValidX;\n            @y = @lastValidY;\n        else\n            @lastValidX = @x;\n            @lastValidY = @y;\n    ##\n    # On drag event\n    ##\n    onDrag:( event )->\n        @color = @colorDrag\n        super( event );\n        @checkValidPosition();\n        return this;\n\n    goLeft:( event )->\n        super( event );\n        @checkValidPosition();\n        return this;\n\n    goRight:( event )->\n        super( event );\n        @checkValidPosition();\n        return this;\n\n    goUp:( event )->\n        super( event );\n        @checkValidPosition();\n        return this;\n\n    goDown:( event )->\n        super( event );\n        @checkValidPosition();\n        return this;\n\n    ##\n    # On drop event\n    ##\n    onDrop:( event )->\n        @color = @colorRegular;\n        return super( event );\n\n    onClick:( event )->\n        @side += 5 if @side < 200\n        @onMouseOver( event );\n        return super( event );\n\n    onDblClick:(event)->\n        @side = 100\n        return super( event );\n\n    ##\n    # Returns if the Mouse is Over the Element\n    #\n    # @param outX\n    # @param outY\n    # @return boolean\n    ## \n    isInsideElement:( outX , outY )->\n        return  ( Math.round( outX ) >= Math.round( this.x - @side / 2 ) ) &&\n                ( Math.round( outX ) <= Math.round( this.x + @side / 2 ) ) &&\n                ( Math.round( outY ) >= Math.round( this.y - @side / 2 ) ) &&\n                ( Math.round( outY ) <= Math.round( this.y + @side / 2 ) );\n\n    inCollision:()->\n        for objElement in @objBox.arrElements\n            if( objElement.getId() != this.getId() )\n                if( \n                        objElement.isInsideElement( this.x - @side / 2 , this.y - @side / 2 ) ||\n                        objElement.isInsideElement( this.x + @side / 2 , this.y - @side / 2 ) ||\n                        objElement.isInsideElement( this.x - @side / 2 , this.y + @side / 2 ) ||\n                        objElement.isInsideElement( this.x + @side / 2 , this.y + @side / 2 ) ||\n                        objElement.isInsideElement( this.x - @side / 2 , this.y ) ||\n                        objElement.isInsideElement( this.x + @side / 2 , this.y ) ||\n                        objElement.isInsideElement( this.x , this.y + @side / 2 ) ||\n                        objElement.isInsideElement( this.x , this.y - @side / 2 ) \n                  )\n                      return true;\n        return false;\n"]}