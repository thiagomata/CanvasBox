{"version":3,"sources":["Basic.coffee"],"names":[],"mappings":"AAAA,YAAA,CAAA;AAEA;AAAA;;;;;GAFA;AAAA,IAAA,oHAAA;;AAAA,GAQA,GAAM,EARN,CAAA;;AAAA,GASG,CAAC,OAAJ,GAAc,OAAA,GAAU,SAAC,QAAD,GAAA;AActB,MAAA,oDAAA;AAAA,EAAA,CAAA,GAAI,MAAM,CAAC,QAAX,CAAA;AAAA,EACA,KAAA,GAAQ,CAAC,CAAC,eAAe,CAAC,QAAlB,KAAgC,MAAhC,IAA0C,CAAA,CAAK,CAAC,KADxD,CAAA;AAAA,EAEA,OAAA,GAAU,IAAC,CAAA,iBAAD,CAAmB,QAAnB,CAFV,CAAA;AAAA,EAGA,YAAA,GAAe,MAHf,CAAA;AAAA,EAIA,YAAA,GAAe,CAAK,CAAC,CAAC,eAAF,IAAsB,KAA1B,GAAsC,CAAC,CAAC,eAAF,CAAkB,8BAAlB,EAAkD,QAAlD,CAAtC,GAAuG,CAAC,CAAC,aAAF,CAAgB,QAAhB,CAAxG,CAJf,CAAA;AAAA,EAKA,YAAY,CAAC,IAAb,GAAoB,iBALpB,CAAA;AAAA,EAMA,SAAA,GAAY,SAAS,CAAC,SAAS,CAAC,WAApB,CAAA,CANZ,CAAA;AAOA,EAAA,IAAG,CAAC,SAAS,CAAC,OAAV,CAAkB,MAAlB,CAAA,KAA+B,CAAA,CAAhC,CAAA,IAAwC,CAAC,SAAS,CAAC,OAAV,CAAkB,OAAlB,CAAA,KAA8B,CAAA,CAA/B,CAA3C;AACE,IAAA,YAAY,CAAC,IAAb,GAAoB,OAApB,CADF;GAAA,MAAA;AAGE,IAAA,YAAY,CAAC,WAAb,CAAyB,CAAC,CAAC,cAAF,CAAiB,OAAjB,CAAzB,CAAA,CAHF;GAPA;AAWA,EAAA,IAAG,YAAA,KAAkB,SAArB;AACE,IAAA,IAAG,CAAC,CAAC,sBAAF,IAA6B,KAAhC;AACE,MAAA,IAAG,CAAC,CAAC,sBAAF,CAAyB,8BAAzB,EAAyD,MAAzD,CAAiE,CAAA,CAAA,CAApE;AACE,QAAA,CAAC,CAAC,sBAAF,CAAyB,8BAAzB,EAAyD,MAAzD,CAAiE,CAAA,CAAA,CAAE,CAAC,WAApE,CAAgF,YAAhF,CAAA,CADF;OAAA,MAAA;AAGE,QAAA,CAAC,CAAC,eAAe,CAAC,YAAlB,CAA+B,YAA/B,EAA6C,CAAC,CAAC,eAAe,CAAC,UAA/D,CAAA,CAHF;OADF;KAAA,MAAA;AAME,MAAA,CAAC,CAAC,oBAAF,CAAuB,MAAvB,CAA+B,CAAA,CAAA,CAAE,CAAC,WAAlC,CAA8C,YAA9C,CAAA,CANF;KAAA;AAAA,IASA,QAAA,GAAW,EATX,CAAA;AAAA,IAUA,QAAS,CAAA,MAAM,CAAC,QAAQ,CAAC,IAAhB,CAAT,GAAiC,CAVjC,CAAA;AAAA,IAaA,IAAC,CAAA,MAAD,GAAU,IAAC,CAAA,MAAD,IAAW,EAbrB,CAAA;AAgBA,IAAA,IAAA,CAAA,IAAqC,CAAA,MAAM,CAAC,QAA5C;AAAA,MAAA,IAAC,CAAA,MAAM,CAAC,QAAR,GAAmB,QAAnB,CAAA;KAhBA;AAiBA,IAAA,IAAA,CAAA,IAAQ,CAAA,MAAM,CAAC,QAAS,CAAA,QAAA,CAAxB;AACE,MAAA,IAAC,CAAA,MAAM,CAAC,QAAS,CAAA,QAAA,CAAjB,GAA6B,CAA7B,CAAA;AACA,aAAO,CAAP,CAFF;KAAA,MAAA;AAIE,aAAO,EAAA,IAAG,CAAA,MAAM,CAAC,QAAS,CAAA,QAAA,CAA1B,CAJF;KAlBF;GAXA;SAkCA,EAhDsB;AAAA,CATxB,CAAA;;AAAA,GA0DG,CAAC,YAAJ,GAAmB,OAAA,GAAU,SAAC,QAAD,GAAA;AAc3B,MAAA,oDAAA;AAAA,EAAA,CAAA,GAAI,MAAM,CAAC,QAAX,CAAA;AAAA,EACA,KAAA,GAAQ,CAAC,CAAC,eAAe,CAAC,QAAlB,KAAgC,MAAhC,IAA0C,CAAA,CAAK,CAAC,KADxD,CAAA;AAAA,EAEA,OAAA,GAAU,IAAC,CAAA,iBAAD,CAAmB,QAAnB,CAFV,CAAA;AAAA,EAGA,YAAA,GAAe,CAAI,CAAC,CAAC,eAAF,IAAsB,KAAzB,GAAoC,CAAC,CAAC,eAAF,CAAkB,8BAAlB,EAAkD,QAAlD,CAApC,GAAqG,CAAC,CAAC,aAAF,CAAgB,QAAhB,CAAtG,CAHf,CAAA;AAAA,EAIA,YAAY,CAAC,IAAb,GAAoB,iBAJpB,CAAA;AAAA,EAKA,SAAA,GAAY,SAAS,CAAC,SAAS,CAAC,WAApB,CAAA,CALZ,CAAA;AAMA,EAAA,IAAG,CAAC,SAAS,CAAC,OAAV,CAAkB,MAAlB,CAAA,KAA+B,CAAA,CAAhC,CAAA,IAAwC,CAAC,SAAS,CAAC,OAAV,CAAkB,OAAlB,CAAA,KAA8B,CAAA,CAA/B,CAA3C;AACE,IAAA,YAAY,CAAC,IAAb,GAAoB,OAApB,CADF;GAAA,MAAA;AAGE,IAAA,YAAY,CAAC,WAAb,CAAyB,CAAC,CAAC,cAAF,CAAiB,OAAjB,CAAzB,CAAA,CAHF;GANA;AAUA,EAAA,IAAG,MAAA,CAAA,YAAA,KAAyB,WAA5B;AAEG,IAAA,IAAG,CAAC,CAAC,sBAAF,IAA6B,KAAhC;AAA6C,MAAA,IAAG,CAAC,CAAC,sBAAF,CAAyB,8BAAzB,EAAyD,MAAzD,CAAiE,CAAA,CAAA,CAApE;AAA4E,QAAA,CAAC,CAAC,sBAAF,CAAyB,8BAAzB,EAAyD,MAAzD,CAAiE,CAAA,CAAA,CAAE,CAAC,WAApE,CAAgF,YAAhF,CAAA,CAA5E;OAAA,MAAA;AAA+K,QAAA,CAAC,CAAC,eAAe,CAAC,YAAlB,CAA+B,YAA/B,EAA6C,CAAC,CAAC,eAAe,CAAC,UAA/D,CAAA,CAA/K;OAA7C;KAAA,MAAA;AAA8S,MAAA,CAAC,CAAC,oBAAF,CAAuB,MAAvB,CAA+B,CAAA,CAAA,CAAE,CAAC,WAAlC,CAA8C,YAA9C,CAAA,CAA9S;KAAD;AAAA,IAGA,QAAA,GAAW,EAHX,CAAA;AAAA,IAIA,QAAS,CAAA,MAAM,CAAC,QAAQ,CAAC,IAAhB,CAAT,GAAiC,CAJjC,CAAA;AAAA,IAOA,IAAC,CAAA,MAAD,GAAU,IAAC,CAAA,MAAD,IAAW,EAPrB,CAAA;AAUA,IAAA,IAAA,CAAA,IAAqC,CAAA,MAAM,CAAC,QAA5C;AAAA,MAAA,IAAC,CAAA,MAAM,CAAC,QAAR,GAAmB,QAAnB,CAAA;KAVA;AAWA,IAAA,IAAA,CAAA,IAAQ,CAAA,MAAM,CAAC,QAAS,CAAA,QAAA,CAAxB;AACE,MAAA,IAAC,CAAA,MAAM,CAAC,QAAS,CAAA,QAAA,CAAjB,GAA6B,CAA7B,CAAA;AACA,aAAO,CAAP,CAFF;KAAA,MAAA;AAIE,aAAO,EAAA,IAAG,CAAA,MAAM,CAAC,QAAS,CAAA,QAAA,CAA1B,CAJF;KAbF;GAVA;SA4BA,EA1C2B;AAAA,CA1D7B,CAAA;;AAAA,GAuGG,CAAC,iBAAJ,GAAwB,iBAAA,GAAoB,SAAC,GAAD,EAAM,KAAN,EAAa,OAAb,EAAsB,MAAtB,EAA8B,MAA9B,GAAA;AAuB1C,MAAA,2PAAA;AAAA,EAAA,GAAA,GAAM,MAAN,CAAA;AAAA,EACA,OAAA,GAAU,EADV,CAAA;AAAA,EAEA,MAAA,GAAS,EAFT,CAAA;AAAA,EAGA,CAAA,GAAI,CAHJ,CAAA;AAAA,EAIA,CAAA,GAAI,CAJJ,CAAA;AAAA,EAKA,IAAA,GAAO,EALP,CAAA;AAAA,EAMA,OAAA,GAAU,CAAA,CANV,CAAA;AAAA,EAOA,SAAA,GAAY,CAPZ,CAAA;AAAA,EAQA,OAAA,GAAU,IARV,CAAA;AAAA,EASA,WAAA,GAAc,KATd,CAAA;AAAA,EAUA,IAAA,GAAO,SAAC,KAAD,GAAA;WACL,KAAK,CAAC,SAAN,CAAgB,CAAhB,CAAA,KAAwB,GADnB;EAAA,CAVP,CAAA;AAAA,EAeA,IAAC,CAAA,MAAD,GAAU,IAAC,CAAA,MAAD,IAAW,EAfrB,CAAA;AAAA,EAgBA,IAAC,CAAA,MAAM,CAAC,GAAR,GAAc,IAAC,CAAA,MAAM,CAAC,GAAR,IAAe,EAhB7B,CAAA;AAAA,EAmBA,GAAA,GAAM,IAAC,CAAA,MAAM,CAAC,GAnBd,CAAA;AAAA,EAoBA,OAAA,GAAU,OAAA,IAAW,IAAC,CAAA,MAAM,CAAC,uBAAnB,IAA8C,IApBxD,CAAA;AAqBA,EAAA,IAAA,CAAA,KAAA;AAAA,IAAA,KAAA,GAAQ,CAAR,CAAA;GArBA;AAAA,EAsBA,IAAA,GACE;AAAA,IAAA,qBAAA,EAAuB,CAAvB;AAAA,IACA,SAAA,EAAW,EADX;AAAA,IAEA,WAAA,EAAa,EAFb;GAvBF,CAAA;AA2BA,EAAA,IAAG,MAAA,CAAA,KAAA,KAAgB,QAAnB;AAGE,IAAA,SAAA,GAAY,KAAZ,CAHF;GAAA,MAAA;AAKE,IAAA,KAAA,GAAQ,EAAE,CAAC,MAAH,CAAU,KAAV,CAAR,CAAA;AAAA,IACA,CAAA,GAAI,CADJ,CAAA;AAEA,WAAM,CAAA,GAAI,KAAK,CAAC,MAAhB,GAAA;AACE,MAAA,IAA2C,IAAK,CAAA,KAAM,CAAA,CAAA,CAAN,CAAhD;AAAA,QAAA,SAAA,GAAY,SAAA,GAAY,IAAK,CAAA,KAAM,CAAA,CAAA,CAAN,CAA7B,CAAA;OAAA;AAAA,MACA,CAAA,EADA,CADF;IAAA,CAPF;GA3BA;AAuCA,EAAA,IAAkF,SAAA,GAAY,IAAI,CAAC,WAAjB,IAAiC,CAAC,SAAA,GAAY,IAAI,CAAC,SAAlB,CAAnH;AAAA,UAAM,uEAAN,CAAA;GAvCA;AAwCA,EAAA,IAAG,CAAC,SAAA,GAAY,IAAI,CAAC,qBAAlB,CAAA,IAA6C,GAAG,CAAC,YAAjD,IAAkE,GAAG,CAAC,YAAY,CAAC,WAAtF;AACE,IAAA,KAAA,GAAQ,CAAI,GAAG,CAAC,YAAY,CAAC,WAAW,CAAC,OAA7B,CAAqC,GAArC,CAAA,KAA+C,CAAA,CAAlD,GAA0D,GAA1D,GAAmE,IAApE,CAAR,CAAA;AAAA,IACA,GAAA,GAAM,GAAG,CAAC,YAAY,CAAC,WAAjB,GAA+B,KAA/B,GAAuC,GAD7C,CADF;GAAA,MAGK,IAAA,CAAA,iBAAwB,CAAC,IAAlB,CAAuB,GAAvB,CAAP;AAGH,IAAA,IAAA,GAAO,MAAM,CAAC,QAAQ,CAAC,IAAvB,CAAA;AAAA,IACA,OAAA,GAAU,CAAI,GAAG,CAAC,OAAJ,CAAY,GAAZ,CAAA,KAAoB,CAAvB,GAA8B,IAAI,CAAC,OAAL,CAAa,GAAb,EAAkB,CAAlB,CAAA,GAAuB,CAArD,GAA4D,IAAI,CAAC,WAAL,CAAiB,GAAjB,CAA7D,CADV,CAAA;AAAA,IAEA,GAAA,GAAM,IAAI,CAAC,KAAL,CAAW,CAAX,EAAc,OAAA,GAAU,CAAxB,CAAA,GAA6B,GAFnC,CAHG;GA3CL;AAAA,EAiDA,YAAA,GAAe,MAjDf,CAAA;AAkDA,EAAA,IAAG,OAAH;AACE,IAAA,YAAA,GAAe,OAAO,CAAC,cAAR,IAA2B,OAAO,CAAC,cAAc,CAAC,IAAjE,CAAA;AAAA,IACA,WAAA,GAAc,CAAA,CAAC,YADf,CADF;GAlDA;AAqDA,EAAA,IAAG,CAAA,OAAA,IAAe,CAAA,OAAW,CAAC,cAA3B,IAA6C,WAAhD;AACE,IAAA,GAAA,GAAM,CAAI,MAAM,CAAC,aAAV,GAAiC,IAAA,aAAA,CAAc,mBAAd,CAAjC,GAA6E,IAAA,cAAA,CAAA,CAA9E,CAAN,CAAA;AACA,IAAA,IAAA,CAAA,GAAA;AAAA,YAAU,IAAA,KAAA,CAAM,8BAAN,CAAV,CAAA;KADA;AAAA,IAEA,MAAA,GAAS,CAAI,WAAH,GAAoB,YAAY,CAAC,MAAjC,GAA6C,KAA9C,CAFT,CAAA;AAAA,IAGA,KAAA,GAAQ,CAAA,CAAC,CAAE,OAAA,IAAY,OAAO,CAAC,aAApB,IAAsC,OAAO,CAAC,aAAc,CAAA,aAAA,CAA7D,CAHV,CAAA;AAIA,IAAA,IAAkF,GAAI,CAAA,uBAAA,CAAJ,IAAiC,GAAI,CAAA,uBAAA,CAAwB,CAAC,WAAhJ;AAAA,MAAA,GAAA,IAAQ,CAAQ,uBAAP,GAA6B,GAA7B,GAAsC,GAAvC,CAAD,GAAgD,CAAK,IAAA,IAAA,CAAA,CAAL,CAAY,CAAC,OAAb,CAAA,CAAvD,CAAA;KAJA;AAAA,IAKA,GAAG,CAAC,IAAJ,CAAS,MAAT,EAAiB,GAAjB,EAAsB,KAAtB,CALA,CAAA;AAMA,IAAA,IAAG,KAAH;AACE,MAAA,YAAA,GAAe,OAAO,CAAC,aAAa,CAAC,YAArC,CAAA;AACA,MAAA,IAAG,MAAA,CAAA,YAAA,KAAuB,UAA1B;AAGE,QAAA,IAAG,CAAA,IAAM,GAAG,CAAC,gBAAb;AASE,gBAAU,IAAA,KAAA,CAAM,wBAAN,CAAV,CATF;SAAA,MAAA;AAWE,UAAA,GAAG,CAAC,kBAAJ,GAAyB,SAAC,IAAD,GAAA;AAqBvB,gBAAA,6BAAA;AAAA,YAAA,UAAA,GACE;AAAA,cAAA,YAAA,EAAc,GAAG,CAAC,YAAlB;AAAA,cACA,WAAA,EAAa,GAAG,CAAC,WADjB;AAAA,cAEA,MAAA,EAAQ,GAAG,CAAC,MAFZ;AAAA,cAGA,UAAA,EAAY,GAAG,CAAC,UAHhB;AAAA,cAIA,UAAA,EAAY,GAAG,CAAC,UAJhB;AAAA,cAKA,GAAA,EAAK,IALL;aADF,CAAA;AAAA,YAWA,iBAAA,GAAoB,MAXpB,CAAA;AAYA,oBAAO,GAAG,CAAC,UAAX;AAAA,mBACO,CADP;AAII,gBAAA,YAAY,CAAC,IAAb,CAAkB,UAAlB,EAA8B,CAA9B,EAAiC,CAAjC,EAAoC,EAApC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,CAA9C,CAAA,CAJJ;AACO;AADP,mBAKO,CALP;AAQI,gBAAA,YAAY,CAAC,IAAb,CAAkB,UAAlB,EAA8B,CAA9B,EAAiC,CAAjC,EAAoC,EAApC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,CAA9C,CAAA,CARJ;AAKO;AALP,mBASO,CATP;AAYI,gBAAA,YAAY,CAAC,IAAb,CAAkB,UAAlB,EAA8B,CAA9B,EAAiC,CAAjC,EAAoC,EAApC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,CAA9C,CAAA,CAZJ;AASO;AATP,mBAaO,CAbP;AAiBI,gBAAA,iBAAA,GAAoB,GAAG,CAAC,YAAY,CAAC,MAAjB,GAA0B,CAA9C,CAAA;AAAA,gBACA,YAAY,CAAC,IAAb,CAAkB,UAAlB,EAA8B,CAA9B,EAAiC,CAAjC,EAAoC,EAApC,EAAwC,CAAxC,EAA2C,iBAA3C,EAA8D,CAA9D,CADA,CAjBJ;AAaO;AAbP,mBAmBO,CAnBP;AAsBI,gBAAA,IAAG,GAAG,CAAC,MAAJ,IAAc,GAAd,IAAsB,GAAG,CAAC,MAAJ,GAAa,GAAtC;AAGE,kBAAA,iBAAA,GAAoB,GAAG,CAAC,YAAY,CAAC,MAAjB,GAA0B,CAA9C,CAAA;AAAA,kBACA,YAAY,CAAC,IAAb,CAAkB,UAAlB,EAA8B,CAA9B,EAAiC,CAAjC,EAAoC,EAApC,EAAwC,GAAG,CAAC,MAA5C,EAAoD,iBAApD,EAAuE,CAAvE,CADA,CAHF;iBAAA,MAKK,IAAG,GAAG,CAAC,MAAJ,KAAc,GAAjB;AAGH,kBAAA,YAAY,CAAC,IAAb,CAAkB,UAAlB,EAA8B,EAA9B,EAAkC,CAAlC,EAAqC,EAArC,EAAyC,GAAG,CAAC,MAA7C,EAAqD,CAArD,EAAwD,CAAxD,CAAA,CAHG;iBAAA,MAAA;AAOH,kBAAA,YAAY,CAAC,IAAb,CAAkB,UAAlB,EAA8B,CAA9B,EAAiC,CAAjC,EAAoC,EAApC,EAAwC,GAAG,CAAC,MAA5C,EAAoD,CAApD,EAAuD,CAAvD,CAAA,CAPG;iBA3BT;AAmBO;AAnBP;AAoCI,sBAAM,kDAAN,CApCJ;AAAA,aAjCuB;UAAA,CAAzB,CAXF;SAHF;OAFF;KANA;AA6FA,IAAA,IAAG,WAAH;AACE,MAAA,WAAA,GAAc,CAAC,YAAY,CAAC,MAAb,IAAwB,YAAY,CAAC,MAAM,CAAC,KAApB,CAA0B,OAA1B,CAAzB,CAAA,IAAgE,EAA9E,CAAA;AAAA,MACA,aAAA,GAAgB,KADhB,CAAA;AAAA,MAEA,CAAA,GAAI,CAFJ,CAAA;AAGA,aAAM,CAAA,GAAI,WAAW,CAAC,MAAtB,GAAA;AACE,QAAA,UAAA,GAAa,WAAY,CAAA,CAAA,CAAzB,CAAA;AAAA,QACA,QAAA,GAAW,UAAU,CAAC,MAAX,CAAkB,MAAlB,CADX,CAAA;AAAA,QAEA,cAAA,GAAiB,UAAU,CAAC,SAAX,CAAqB,CAArB,EAAwB,QAAxB,CAFjB,CAAA;AAAA,QAGA,GAAG,CAAC,gBAAJ,CAAqB,cAArB,EAAqC,UAAU,CAAC,SAAX,CAAqB,QAAA,GAAW,CAAhC,CAArC,CAHA,CAAA;AAIA,QAAA,IAAyB,cAAA,KAAkB,YAA3C;AAAA,UAAA,aAAA,GAAgB,IAAhB,CAAA;SAJA;AAAA,QAKA,CAAA,EALA,CADF;MAAA,CAHA;AAUA,MAAA,IAAA,CAAA,aAAA;AACE,QAAA,UAAA,GAAa,YAAY,CAAC,UAAb,IAA2B,CAAC,GAAG,CAAC,UAAJ,IAAmB,GAAG,CAAC,UAAU,CAAC,WAAnC,CAAxC,CAAA;AACA,QAAA,IAAkD,UAAlD;AAAA,UAAA,GAAG,CAAC,gBAAJ,CAAqB,YAArB,EAAmC,UAAnC,CAAA,CAAA;SAFF;OAVA;AAAA,MAaA,OAAA,GAAU,YAAY,CAAC,OAAb,IAAwB,IAblC,CADF;KA7FA;AA0HA,IAAA,IAAG,SAAA,GAAY,IAAI,CAAC,SAApB;AAGE,MAAA,YAAA,GAAe,WAAf,CAAA;AACA,MAAA,IAAG,YAAA,IAAiB,YAAa,CAAA,gBAAA,CAAjC;AAIE,QAAA,YAAA,GAAe,YAAa,CAAA,gBAAA,CAA5B,CAJF;OAAA,MAAA;AAQE,QAAA,QAAA,GAAW,CAAC,GAAI,CAAA,yBAAA,CAAJ,IAAmC,GAAI,CAAA,yBAAA,CAA0B,CAAC,WAAnE,CAAA,IAAmF,OAA9F,CAAA;AAIA,QAAA,IAA2E,YAAA,IAAiB,YAAY,CAAC,MAA9B,IAA0C,iBAAkB,CAAC,IAApB,CAAyB,YAAY,CAAC,MAAtC,CAApH;AAAA,UAAA,YAAA,GAAe,YAAY,CAAC,MAAM,CAAC,KAApB,CAA0B,yBAA1B,CAAqD,CAAA,CAAA,CAApE,CAAA;SAJA;AAOA,QAAA,IAAA,CAAA,cAAgE,CAAC,IAAjB,CAAsB,YAAtB,CAAhD;AAAA,UAAA,YAAA,IAAgB,YAAA,GAAe,QAA/B,CAAA;SAfF;OADA;AAAA,MAiBA,GAAG,CAAC,gBAAJ,CAAqB,YAArB,CAjBA,CAHF;KAAA,MAAA;AA0BK,MAAA,IAA8D,SAAA,GAAY,IAAI,CAAC,WAA/E;AAAA,QAAA,GAAG,CAAC,gBAAJ,CAAqB,oCAArB,CAAA,CAAA;OA1BL;KA1HA;AAyJA;AACE,MAAA,IAAG,YAAA,IAAiB,YAAa,CAAA,oBAAA,CAAjC;AAIE,QAAA,GAAG,CAAC,YAAJ,CAAiB,OAAjB,CAAA,CAJF;OAAA,MAAA;AAME,QAAA,GAAG,CAAC,IAAJ,CAAS,OAAT,CAAA,CANF;OADF;KAAA,cAAA;AAWE,MAHI,UAGJ,CAAA;AAAA,aAAO,KAAP,CAXF;KAzJA;AAAA,IAqKA,GAAA,GAAM,GAAG,CAAC,qBAAJ,CAAA,CArKN,CAAA;AAsKA,IAAA,IAAG,GAAH;AACE,MAAA,GAAA,GAAM,GAAG,CAAC,KAAJ,CAAU,IAAV,CAAN,CAAA;AAAA,MACA,CAAA,GAAI,CADJ,CAAA;AAEA,aAAM,CAAA,GAAI,GAAG,CAAC,MAAd,GAAA;AACE,QAAA,IAAuB,IAAA,CAAK,GAAI,CAAA,CAAA,CAAT,CAAvB;AAAA,UAAA,MAAM,CAAC,IAAP,CAAY,GAAI,CAAA,CAAA,CAAhB,CAAA,CAAA;SAAA;AAAA,QACA,CAAA,EADA,CADF;MAAA,CAFA;AAAA,MAKA,GAAA,GAAM,MALN,CAAA;AAAA,MAMA,CAAA,GAAI,CANJ,CAAA;AAOA,aAAM,CAAA,GAAI,GAAG,CAAC,MAAd,GAAA;AACE,QAAA,OAAQ,CAAA,CAAA,CAAR,GAAa,GAAI,CAAA,CAAA,CAAjB,CAAA;AAAA,QACA,CAAA,EADA,CADF;MAAA,CAPA;AAAA,MAYA,IAAC,CAAA,qBAAD,GAAyB,OAZzB,CADF;KAtKA;AAoLA,IAAA,IAAG,MAAA,IAAU,MAAb;AACE,MAAA,IAAwD,MAAxD;AAAA,eAAO,GAAG,CAAC,YAAY,CAAC,MAAjB,CAAwB,MAAA,IAAU,CAAlC,EAAqC,MAArC,CAAP,CAAA;OAAA;AACA,aAAO,GAAG,CAAC,YAAY,CAAC,MAAjB,CAAwB,MAAxB,CAAP,CAFF;KApLA;AAuLA,WAAO,GAAG,CAAC,YAAX,CAxLF;GArDA;SA8OA,MArQ0C;AAAA,CAvG5C,CAAA;;AAAA,GA8WG,CAAC,WAAJ,GAAkB,WAAA,GAAc,SAAC,GAAD,GAAA;AAU9B,MAAA,GAAA;AAAA,EAAA,GAAA,GAAM,CAAI,MAAM,CAAC,aAAV,GAAiC,IAAA,aAAA,CAAc,mBAAd,CAAjC,GAA6E,IAAA,cAAA,CAAA,CAA9E,CAAN,CAAA;AACA,EAAA,IAAA,CAAA,GAAA;AAAA,UAAU,IAAA,KAAA,CAAM,8BAAN,CAAV,CAAA;GADA;AAAA,EAIA,GAAG,CAAC,IAAJ,CAAS,MAAT,EAAiB,GAAjB,EAAsB,KAAtB,CAJA,CAAA;AAAA,EAKA,GAAG,CAAC,IAAJ,CAAS,IAAT,CALA,CAAA;AAMA,EAAA,IAAgB,GAAG,CAAC,MAAJ,KAAc,GAA9B;AAAA,WAAO,IAAP,CAAA;GANA;SAOA,MAjB8B;AAAA,CA9WhC,CAAA;;AAAA,GAiYG,CAAC,OAAJ,GAAc,OAAA,GAAU,SAAC,IAAD,EAAO,MAAP,GAAA;AAWtB,MAAA,gBAAA;AAAA,EAAA,CAAA,GAAI,EAAJ,CAAA;AAAA,EACA,MAAA,GAAS,EADT,CAAA;AAAA,EAEA,KAAA,GAAQ,EAFR,CAAA;AAGA,EAAA,IAAG,UAAU,CAAC,MAAX,KAAqB,CAAxB;AACE,IAAA,MAAA,GAAS,IAAT,CAAA;AAAA,IACA,IAAA,GAAO,EADP,CADF;GAHA;AAMA,EAAA,IAAG,MAAA,CAAA,MAAA,KAAiB,QAApB;AACE,IAAA,IAA6B,MAAM,CAAA,SAAE,CAAA,QAAQ,CAAC,IAAjB,CAAsB,MAAtB,CAAA,KAAiC,gBAA9D;AAAA,aAAO,MAAM,CAAC,IAAP,CAAY,IAAZ,CAAP,CAAA;KAAA;AACA,SAAA,WAAA,GAAA;AACE,MAAA,MAAA,IAAU,KAAA,GAAQ,MAAO,CAAA,CAAA,CAAzB,CAAA;AAAA,MACA,KAAA,GAAQ,IADR,CADF;AAAA,KADA;AAIA,WAAO,MAAP,CALF;GANA;SAYA,OAvBsB;AAAA,CAjYxB,CAAA;;AAAA,GA0ZG,CAAC,OAAJ,GAAc,OAAA,GAAU,SAAC,SAAD,EAAY,MAAZ,EAAoB,KAApB,GAAA;AAMtB,MAAA,CAAA;AAAA,EAAA,IAAgB,UAAU,CAAC,MAAX,GAAoB,CAApB,IAAyB,MAAA,CAAA,SAAA,KAAoB,WAA7C,IAA4D,MAAA,CAAA,MAAA,KAAiB,WAA7F;AAAA,WAAO,IAAP,CAAA;GAAA;AACA,EAAA,IAAiB,SAAA,KAAa,EAAb,IAAmB,SAAA,KAAa,KAAhC,IAAyC,SAAA,KAAa,IAAvE;AAAA,WAAO,KAAP,CAAA;GADA;AAEA,EAAA,IAAiB,MAAA,CAAA,SAAA,KAAoB,UAApB,IAAkC,MAAA,CAAA,SAAA,KAAoB,QAAtD,IAAkE,MAAA,CAAA,MAAA,KAAiB,UAAnF,IAAiG,MAAA,CAAA,MAAA,KAAiB,QAAnI;AAAA,WAAO;AAAA,MAAA,CAAA,EAAG,EAAH;KAAP,CAAA;GAFA;AAGA,EAAA,IAAoB,SAAA,KAAa,IAAjC;AAAA,IAAA,SAAA,GAAY,GAAZ,CAAA;GAHA;AAAA,EAMA,SAAA,IAAa,EANb,CAAA;AAAA,EAOA,MAAA,IAAU,EAPV,CAAA;AAAA,EAQA,CAAA,GAAI,MAAM,CAAC,KAAP,CAAa,SAAb,CARJ,CAAA;AASA,EAAA,IAAa,MAAA,CAAA,KAAA,KAAgB,WAA7B;AAAA,WAAO,CAAP,CAAA;GATA;AAYA,EAAA,IAAc,KAAA,KAAS,CAAvB;AAAA,IAAA,KAAA,GAAQ,CAAR,CAAA;GAZA;AAeA,EAAA,IAAG,KAAA,GAAQ,CAAX;AACE,IAAA,IAAa,KAAA,IAAS,CAAC,CAAC,MAAxB;AAAA,aAAO,CAAP,CAAA;KAAA;AACA,WAAO,CAAC,CAAC,KAAF,CAAQ,CAAR,EAAW,KAAA,GAAQ,CAAnB,CAAqB,CAAC,MAAtB,CAA6B,CAAC,CAAC,CAAC,KAAF,CAAQ,KAAA,GAAQ,CAAhB,CAAkB,CAAC,IAAnB,CAAwB,SAAxB,CAAD,CAA7B,CAAP,CAFF;GAfA;AAoBA,EAAA,IAAc,CAAA,KAAA,IAAU,CAAC,CAAC,MAA1B;AAAA,WAAO,EAAP,CAAA;GApBA;AAAA,EAqBA,CAAC,CAAC,MAAF,CAAS,CAAC,CAAC,MAAF,GAAW,KAApB,CArBA,CAAA;SAsBA,EA5BsB;AAAA,CA1ZxB,CAAA;;AAAA,GAwbG,CAAC,UAAJ,GAAiB,UAAA,GAAa,SAAC,KAAD,EAAQ,YAAR,EAAsB,SAAtB,GAAA;AAY5B,MAAA,qCAAA;AAAA,EAAA,MAAA,GAAS,MAAA,CAAA,YAAA,KAAyB,WAAlC,CAAA;AAAA,EACA,OAAA,GAAU,EADV,CAAA;AAAA,EAEA,MAAA,GAAS,CAAA,CAAC,SAFV,CAAA;AAAA,EAGA,OAAA,GAAU,IAHV,CAAA;AAAA,EAIA,GAAA,GAAM,EAJN,CAAA;AAOA,EAAA,IAA+C,KAAA,IAAU,MAAA,CAAA,KAAA,KAAgB,QAA1B,IAAuC,KAAK,CAAC,eAA5F;AAAA,WAAO,KAAK,CAAC,IAAN,CAAW,YAAX,EAAyB,SAAzB,CAAP,CAAA;GAPA;AAQA,OAAA,YAAA,GAAA;AACE,IAAA,IAAG,KAAK,CAAC,cAAN,CAAqB,GAArB,CAAH;AACE,MAAA,OAAA,GAAU,IAAV,CAAA;AACA,MAAA,IAAG,MAAH;AACE,QAAA,IAAG,MAAA,IAAW,KAAM,CAAA,GAAA,CAAN,KAAgB,YAA9B;AACE,UAAA,OAAA,GAAU,KAAV,CADF;SAAA,MAAA;AAEK,UAAA,IAAwB,KAAM,CAAA,GAAA,CAAN,KAAc,YAAtC;AAAA,YAAA,OAAA,GAAU,KAAV,CAAA;WAFL;SADF;OADA;AAKA,MAAA,IAAkC,OAAlC;AAAA,QAAA,OAAQ,CAAA,OAAO,CAAC,MAAR,CAAR,GAA0B,GAA1B,CAAA;OANF;KADF;AAAA,GARA;SAgBA,QA5B4B;AAAA,CAxb9B,CAAA;;AAAA,GAsdG,CAAC,QAAJ,GAAe,QAAA,GAAW,SAAC,MAAD,EAAS,QAAT,EAAmB,SAAnB,GAAA;AAkBxB,MAAA,WAAA;AAAA,EAAA,GAAA,GAAM,EAAN,CAAA;AAAA,EACA,MAAA,GAAS,CAAA,CAAC,SADV,CAAA;AAMA,EAAA,IAAG,MAAH;AACE,SAAA,eAAA,GAAA;AACE,MAAA,IAAgB,QAAS,CAAA,GAAA,CAAT,KAAiB,MAAjC;AAAA,eAAO,IAAP,CAAA;OADF;AAAA,KADF;GAAA,MAAA;AAIE,SAAA,eAAA,GAAA;AACE,MAAA,IAAgB,QAAS,CAAA,GAAA,CAAT,KAAiB,MAAjC;AAAA,eAAO,IAAP,CAAA;OADF;AAAA,KAJF;GANA;SAYA,MA9BwB;AAAA,CAtd1B,CAAA;;AAAA,GAsfG,CAAC,IAAJ,GAAW,IAAA,GAAO,SAAC,QAAD,EAAW,UAAX,GAAA;AAgChB,MAAA,oEAAA;AAAA,EAAA,MAAA,GAAS,EAAT,CAAA;AAAA,EACA,MAAA,GAAS,EADT,CAAA;AAAA,EAEA,CAAA,GAAI,EAFJ,CAAA;AAAA,EAGA,CAAA,GAAI,CAHJ,CAAA;AAAA,EAIA,MAAA,GAAS,KAJT,CAAA;AAAA,EAKA,IAAA,GAAO,IALP,CAAA;AAAA,EAMA,WAAA,GAAc,KANd,CAAA;AAAA,EAOA,WAAA,GAAc,EAPd,CAAA;AAQA,UAAO,UAAP;AAAA,SACO,aADP;AAII,MAAA,MAAA,GAAS,SAAC,CAAD,EAAI,CAAJ,GAAA;eACP,IAAI,CAAC,SAAL,CAAe,CAAf,EAAkB,CAAlB,EADO;MAAA,CAAT,CAJJ;AACO;AADP,SAMO,oBANP;AASI,MAAA,GAAA,GAAM,IAAC,CAAA,oBAAD,CAAA,CAAN,CAAA;AAAA,MACA,MAAA,GAAS,IAAC,CAAA,MAAM,CAAC,WAAY,CAAA,GAAA,CAAI,CAAC,OADlC,CATJ;AAMO;AANP,SAWO,cAXP;AAcI,MAAA,MAAA,GAAS,SAAC,CAAD,EAAI,CAAJ,GAAA;eACP,CAAA,GAAI,EADG;MAAA,CAAT,CAdJ;AAWO;AAXP,SAgBO,cAhBP;AAgBO;AAhBP;AAoBI,MAAA,MAAA,GAAS,SAAC,CAAD,EAAI,CAAJ,GAAA;AACP,YAAA,kCAAA;AAAA,QAAA,MAAA,GAAS,UAAA,CAAW,CAAX,CAAT,CAAA;AAAA,QACA,MAAA,GAAS,UAAA,CAAW,CAAX,CADT,CAAA;AAAA,QAEA,QAAA,GAAW,MAAA,GAAS,EAAT,KAAe,CAF1B,CAAA;AAAA,QAGA,QAAA,GAAW,MAAA,GAAS,EAAT,KAAe,CAH1B,CAAA;AAIA,QAAA,IAAG,QAAA,IAAa,QAAhB;AACE,iBAAO,CAAI,MAAA,GAAS,MAAZ,GAAwB,CAAxB,GAA+B,CAAI,MAAA,GAAS,MAAZ,GAAwB,CAAA,CAAxB,GAAgC,CAAjC,CAAhC,CAAP,CADF;SAAA,MAEK,IAAG,QAAA,IAAa,CAAA,QAAhB;AACH,iBAAO,CAAP,CADG;SAAA,MAAA;AAEA,UAAA,IAAc,CAAA,QAAA,IAAiB,QAA/B;AAAA,mBAAO,CAAA,CAAP,CAAA;WAFA;SANL;AASC,QAAA,IAAG,CAAA,GAAI,CAAP;iBAAc,EAAd;SAAA,MAAA;AAAsB,UAAA,IAAG,CAAA,GAAI,CAAP;mBAAc,CAAA,EAAd;WAAA,MAAA;mBAAsB,EAAtB;WAAtB;SAVM;MAAA,CAAT,CApBJ;AAAA,GARA;AAyCA;AACE,IAAA,IAAC,CAAA,MAAD,GAAU,IAAC,CAAA,MAAD,IAAW,EAArB,CADF;GAAA,cAAA;AAGE,IADI,UACJ,CAAA;AAAA,IAAA,IAAC,CAAA,MAAD,GAAU,EAAV,CAHF;GAzCA;AAAA,EA6CA,IAAC,CAAA,MAAM,CAAC,GAAR,GAAc,IAAC,CAAA,MAAM,CAAC,GAAR,IAAe,EA7C7B,CAAA;AAAA,EAgDA,WAAA,GAAc,IAAC,CAAA,MAAM,CAAC,GAAI,CAAA,mBAAA,CAAZ,IAAqC,IAAC,CAAA,MAAM,CAAC,GAAI,CAAA,mBAAA,CAAoB,CAAC,WAAtE,IAAsF,IAAC,CAAA,MAAM,CAAC,GAAI,CAAA,mBAAA,CAAoB,CAAC,WAAjC,KAAkD,KAhDtJ,CAAA;AAAA,EAiDA,WAAA,GAAc,CAAI,WAAH,GAAoB,QAApB,GAAkC,WAAnC,CAjDd,CAAA;AAkDA,OAAA,aAAA,GAAA;AAGE,IAAA,IAAG,QAAQ,CAAC,cAAT,CAAwB,CAAxB,CAAH;AACE,MAAA,MAAM,CAAC,IAAP,CAAY,QAAS,CAAA,CAAA,CAArB,CAAA,CAAA;AACA,MAAA,IAAuB,WAAvB;AAAA,QAAA,MAAA,CAAA,QAAgB,CAAA,CAAA,CAAhB,CAAA;OAFF;KAHF;AAAA,GAlDA;AAAA,EAwDA,MAAM,CAAC,IAAP,CAAY,MAAZ,CAxDA,CAAA;AAAA,EAyDA,CAAA,GAAI,CAzDJ,CAAA;AA0DA,SAAM,CAAA,GAAI,MAAM,CAAC,MAAjB,GAAA;AAGE,IAAA,WAAY,CAAA,CAAA,CAAZ,GAAiB,MAAO,CAAA,CAAA,CAAxB,CAAA;AAAA,IACA,CAAA,EADA,CAHF;EAAA,CA1DA;SA+DA,WAAA,IAAe,YA/FC;AAAA,CAtflB,CAAA;;AAAA,GAulBG,CAAC,aAAJ,GAAoB,aAAA,GAAgB,SAAC,GAAD,EAAM,MAAN,GAAA;AAYlC,EAAA,IAAoE,MAAA,CAAA,GAAA,KAAc,QAAlF;AAAA,WAAO,MAAO,CAAA,GAAA,CAAP,IAAgB,MAAA,CAAA,MAAc,CAAA,GAAA,CAAK,CAAA,MAAA,CAAnB,KAA8B,UAArD,CAAA;GAAA;SACA,MAAA,CAAA,GAAW,CAAA,MAAA,CAAX,KAAsB,WAbY;AAAA,CAvlBpC,CAAA;;AAAA,GAsmBG,CAAC,SAAJ,GAAgB,SAAA,GAAY,SAAC,SAAD,GAAA;AAY1B,EAAA,IAAiB,MAAM,CAAA,SAAE,CAAA,QAAQ,CAAC,IAAjB,CAAsB,SAAtB,CAAA,KAAoC,gBAArD;AAAA,WAAO,KAAP,CAAA;GAAA;SACA,SAAA,KAAe,IAAf,IAAwB,MAAA,CAAA,SAAA,KAAoB,SAblB;AAAA,CAtmB5B,CAAA","file":"Basic.js","sourceRoot":"/source/","sourcesContent":["\"use strict\"\n\n###\nFile created automatically based on the php.js project, version 1.3.2\n@author Kevin van Zonneveld <kevin@vanzonneveld.net>\n@author Converted to coffee and changed by <thiago.henrique.mata@gmail.com>\n@link http://phpjs.org\n###\nphp = {}\nphp.require = require = (filename) ->\n  \n  # http://kevin.vanzonneveld.net\n  # +   original by: Michael White (http://getsprink.com)\n  # +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  # +      input by: Brett Zamir (http://brett-zamir.me)\n  # +   bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  # +   input by: Yen-Wei Liu\n  # +   bugfixed by: Brett Zamir (http://brett-zamir.me)\n  # %        note 1: Force Javascript execution to pause until the file is loaded. Usually causes failure if the file never loads. ( Use sparingly! )\n  # %        note 2: Uses global: php_js to keep track of included files\n  # -    depends on: file_get_contents\n  # *     example 1: require('http://www.phpjs.org/js/phpjs/_supporters/pj_test_supportfile_2.js');\n  # *     returns 1: 2\n  d = window.document\n  isXML = d.documentElement.nodeName isnt \"HTML\" or not d.write # Latter is for silly comprehensiveness\n  js_code = @file_get_contents(filename)\n  script_block = undefined\n  script_block = (if (d.createElementNS and isXML) then d.createElementNS(\"http://www.w3.org/1999/xhtml\", \"script\") else d.createElement(\"script\"))\n  script_block.type = \"text/javascript\"\n  client_pc = navigator.userAgent.toLowerCase()\n  if (client_pc.indexOf(\"msie\") isnt -1) and (client_pc.indexOf(\"opera\") is -1)\n    script_block.text = js_code\n  else\n    script_block.appendChild d.createTextNode(js_code)\n  if script_block isnt `undefined`\n    if d.getElementsByTagNameNS and isXML\n      if d.getElementsByTagNameNS(\"http://www.w3.org/1999/xhtml\", \"head\")[0]\n        d.getElementsByTagNameNS(\"http://www.w3.org/1999/xhtml\", \"head\")[0].appendChild script_block\n      else\n        d.documentElement.insertBefore script_block, d.documentElement.firstChild # in case of XUL\n    else\n      d.getElementsByTagName(\"head\")[0].appendChild script_block\n    \n    # save include state for reference by include_once and require_once()\n    cur_file = {}\n    cur_file[window.location.href] = 1\n    \n    # BEGIN REDUNDANT\n    @php_js = @php_js or {}\n    \n    # END REDUNDANT\n    @php_js.includes = cur_file  unless @php_js.includes\n    unless @php_js.includes[filename]\n      @php_js.includes[filename] = 1\n      return 1\n    else\n      return ++@php_js.includes[filename]\n  0\nphp.require_once = require = (filename) ->\n  \n  # http://kevin.vanzonneveld.net\n  # +   original by: Michael White (http://getsprink.com)\n  # +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  # +      input by: Brett Zamir (http://brett-zamir.me)\n  # +   bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  # +   input by: Yen-Wei Liu\n  # +   bugfixed by: Brett Zamir (http://brett-zamir.me)\n  # %        note 1: Force Javascript execution to pause until the file is loaded. Usually causes failure if the file never loads. ( Use sparingly! )\n  # %        note 2: Uses global: php_js to keep track of included files\n  # -    depends on: file_get_contents\n  # *     example 1: require('http://www.phpjs.org/js/phpjs/_supporters/pj_test_supportfile_2.js');\n  # *     returns 1: 2\n  d = window.document\n  isXML = d.documentElement.nodeName isnt \"HTML\" or not d.write # Latter is for silly comprehensiveness\n  js_code = @file_get_contents(filename)\n  script_block = (if d.createElementNS and isXML then d.createElementNS(\"http://www.w3.org/1999/xhtml\", \"script\") else d.createElement(\"script\"))\n  script_block.type = \"text/javascript\"\n  client_pc = navigator.userAgent.toLowerCase()\n  if (client_pc.indexOf(\"msie\") isnt -1) and (client_pc.indexOf(\"opera\") is -1)\n    script_block.text = js_code\n  else\n    script_block.appendChild d.createTextNode(js_code)\n  if typeof script_block isnt \"undefined\"\n    # in case of XUL\n    (if d.getElementsByTagNameNS and isXML then ((if d.getElementsByTagNameNS(\"http://www.w3.org/1999/xhtml\", \"head\")[0] then d.getElementsByTagNameNS(\"http://www.w3.org/1999/xhtml\", \"head\")[0].appendChild(script_block) else d.documentElement.insertBefore(script_block, d.documentElement.firstChild))) else d.getElementsByTagName(\"head\")[0].appendChild(script_block))\n    \n    # save include state for reference by include_once and require_once()\n    cur_file = {}\n    cur_file[window.location.href] = 1\n    \n    # BEGIN REDUNDANT\n    @php_js = @php_js or {}\n    \n    # END REDUNDANT\n    @php_js.includes = cur_file  unless @php_js.includes\n    unless @php_js.includes[filename]\n      @php_js.includes[filename] = 1\n      return 1\n    else\n      return ++@php_js.includes[filename]\n  0\n\n\nphp.file_get_contents = file_get_contents = (url, flags, context, offset, maxLen) ->\n  \n  #  discuss at: http://phpjs.org/functions/file_get_contents/\n  # original by: Legaev Andrey\n  #    input by: Jani Hartikainen\n  #    input by: Raphael (Ao) RUDLER\n  # improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  # improved by: Brett Zamir (http://brett-zamir.me)\n  # bugfixed by: Brett Zamir (http://brett-zamir.me)\n  #        note: This function uses XmlHttpRequest and cannot retrieve resource from different domain without modifications.\n  #        note: Synchronous by default (as in PHP) so may lock up browser. Can\n  #        note: get async by setting a custom \"phpjs.async\" property to true and \"notification\" for an\n  #        note: optional callback (both as context params, with responseText, and other JS-specific\n  #        note: request properties available via 'this'). Note that file_get_contents() will not return the text\n  #        note: in such a case (use this.responseText within the callback). Or, consider using\n  #        note: jQuery's: $('#divId').load('http://url') instead.\n  #        note: The context argument is only implemented for http, and only partially (see below for\n  #        note: \"Presently unimplemented HTTP context options\"); also the arguments passed to\n  #        note: notification are incomplete\n  #        test: skip\n  #   example 1: var buf file_get_contents('http://google.com');\n  #   example 1: buf.indexOf('Google') !== -1\n  #   returns 1: true\n  tmp = undefined\n  headers = []\n  newTmp = []\n  k = 0\n  i = 0\n  href = \"\"\n  pathPos = -1\n  flagNames = 0\n  content = null\n  http_stream = false\n  func = (value) ->\n    value.substring(1) isnt \"\"\n\n  \n  # BEGIN REDUNDANT\n  @php_js = @php_js or {}\n  @php_js.ini = @php_js.ini or {}\n  \n  # END REDUNDANT\n  ini = @php_js.ini\n  context = context or @php_js.default_streams_context or null\n  flags = 0  unless flags\n  OPTS =\n    FILE_USE_INCLUDE_PATH: 1\n    FILE_TEXT: 32\n    FILE_BINARY: 64\n\n  if typeof flags is \"number\"\n    \n    # Allow for a single string or an array of string flags\n    flagNames = flags\n  else\n    flags = [].concat(flags)\n    i = 0\n    while i < flags.length\n      flagNames = flagNames | OPTS[flags[i]]  if OPTS[flags[i]]\n      i++\n  \n  # These flags shouldn't be together\n  throw \"You cannot pass both FILE_BINARY and FILE_TEXT to file_get_contents()\"  if flagNames & OPTS.FILE_BINARY and (flagNames & OPTS.FILE_TEXT)\n  if (flagNames & OPTS.FILE_USE_INCLUDE_PATH) and ini.include_path and ini.include_path.local_value\n    slash = (if ini.include_path.local_value.indexOf(\"/\") isnt -1 then \"/\" else \"\\\\\")\n    url = ini.include_path.local_value + slash + url\n  else unless /^(https?|file):/.test(url)\n    \n    # Allow references within or below the same directory (should fix to allow other relative references or root reference; could make dependent on parse_url())\n    href = window.location.href\n    pathPos = (if url.indexOf(\"/\") is 0 then href.indexOf(\"/\", 8) - 1 else href.lastIndexOf(\"/\"))\n    url = href.slice(0, pathPos + 1) + url\n  http_options = undefined\n  if context\n    http_options = context.stream_options and context.stream_options.http\n    http_stream = !!http_options\n  if not context or not context.stream_options or http_stream\n    req = (if window.ActiveXObject then new ActiveXObject(\"Microsoft.XMLHTTP\") else new XMLHttpRequest())\n    throw new Error(\"XMLHttpRequest not supported\")  unless req\n    method = (if http_stream then http_options.method else \"GET\")\n    async = !!(context and context.stream_params and context.stream_params[\"phpjs.async\"])\n    url += ((if not url.match(/\\?/)? then \"?\" else \"&\")) + (new Date()).getTime()  if ini[\"phpjs.ajaxBypassCache\"] and ini[\"phpjs.ajaxBypassCache\"].local_value # Give optional means of forcing bypass of cache\n    req.open method, url, async\n    if async\n      notification = context.stream_params.notification\n      if typeof notification is \"function\"\n        \n        # Fix: make work with req.addEventListener if available: https://developer.mozilla.org/En/Using_XMLHttpRequest\n        if 0 and req.addEventListener\n          \n          # Unimplemented so don't allow to get here\n          #\n          #                    req.addEventListener('progress', updateProgress, false);\n          #                    req.addEventListener('load', transferComplete, false);\n          #                    req.addEventListener('error', transferFailed, false);\n          #                    req.addEventListener('abort', transferCanceled, false);\n          #                    \n          throw new Error(\"File Get Content Error\")\n        else\n          req.onreadystatechange = (aEvt) ->\n            \n            # aEvt has stopPropagation(), preventDefault(); see https://developer.mozilla.org/en/NsIDOMEvent\n            # Other XMLHttpRequest properties: multipart, responseXML, status, statusText, upload, withCredentials\n            #\n            #  PHP Constants:\n            #  STREAM_NOTIFY_RESOLVE   1       A remote address required for this stream has been resolved, or the resolution failed. See severity  for an indication of which happened.\n            #  STREAM_NOTIFY_CONNECT   2     A connection with an external resource has been established.\n            #  STREAM_NOTIFY_AUTH_REQUIRED 3     Additional authorization is required to access the specified resource. Typical issued with severity level of STREAM_NOTIFY_SEVERITY_ERR.\n            #  STREAM_NOTIFY_MIME_TYPE_IS  4     The mime-type of resource has been identified, refer to message for a description of the discovered type.\n            #  STREAM_NOTIFY_FILE_SIZE_IS  5     The size of the resource has been discovered.\n            #  STREAM_NOTIFY_REDIRECTED    6     The external resource has redirected the stream to an alternate location. Refer to message .\n            #  STREAM_NOTIFY_PROGRESS  7     Indicates current progress of the stream transfer in bytes_transferred and possibly bytes_max as well.\n            #  STREAM_NOTIFY_COMPLETED 8     There is no more data available on the stream.\n            #  STREAM_NOTIFY_FAILURE   9     A generic error occurred on the stream, consult message and message_code for details.\n            #  STREAM_NOTIFY_AUTH_RESULT   10     Authorization has been completed (with or without success).\n            #\n            #  STREAM_NOTIFY_SEVERITY_INFO 0     Normal, non-error related, notification.\n            #  STREAM_NOTIFY_SEVERITY_WARN 1     Non critical error condition. Processing may continue.\n            #  STREAM_NOTIFY_SEVERITY_ERR  2     A critical error occurred. Processing cannot continue.\n            #  \n            objContext =\n              responseText: req.responseText\n              responseXML: req.responseXML\n              status: req.status\n              statusText: req.statusText\n              readyState: req.readyState\n              evt: aEvt\n\n            # properties are not available in PHP, but offered on notification via 'this' for convenience\n            # notification args: notification_code, severity, message, message_code, bytes_transferred, bytes_max (all int's except string 'message')\n            # Need to add message, etc.\n            bytes_transferred = undefined\n            switch req.readyState\n              when 0\n                \n                #     UNINITIALIZED     open() has not been called yet.\n                notification.call objContext, 0, 0, \"\", 0, 0, 0\n              when 1\n                \n                #     LOADING     send() has not been called yet.\n                notification.call objContext, 0, 0, \"\", 0, 0, 0\n              when 2\n                \n                #     LOADED     send() has been called, and headers and status are available.\n                notification.call objContext, 0, 0, \"\", 0, 0, 0\n              when 3\n                \n                #     INTERACTIVE     Downloading; responseText holds partial data.\n                # One character is two bytes\n                bytes_transferred = req.responseText.length * 2\n                notification.call objContext, 7, 0, \"\", 0, bytes_transferred, 0\n              when 4\n                \n                #     COMPLETED     The operation is complete.\n                if req.status >= 200 and req.status < 400\n                  \n                  # One character is two bytes\n                  bytes_transferred = req.responseText.length * 2\n                  notification.call objContext, 8, 0, \"\", req.status, bytes_transferred, 0\n                else if req.status is 403\n                  \n                  # Fix: These two are finished except for message\n                  notification.call objContext, 10, 2, \"\", req.status, 0, 0\n                else\n                  \n                  # Errors\n                  notification.call objContext, 9, 2, \"\", req.status, 0, 0\n              else\n                throw \"Unrecognized ready state for file_get_contents()\"\n            return\n    if http_stream\n      sendHeaders = (http_options.header and http_options.header.split(/\\r?\\n/)) or []\n      userAgentSent = false\n      i = 0\n      while i < sendHeaders.length\n        sendHeader = sendHeaders[i]\n        breakPos = sendHeader.search(/:\\s*/)\n        sendHeaderName = sendHeader.substring(0, breakPos)\n        req.setRequestHeader sendHeaderName, sendHeader.substring(breakPos + 1)\n        userAgentSent = true  if sendHeaderName is \"User-Agent\"\n        i++\n      unless userAgentSent\n        user_agent = http_options.user_agent or (ini.user_agent and ini.user_agent.local_value)\n        req.setRequestHeader \"User-Agent\", user_agent  if user_agent\n      content = http_options.content or null\n    \n    #\n    #            // Presently unimplemented HTTP context options\n    #            // When set to TRUE, the entire URI will be used when constructing the request. (i.e. GET http://www.example.com/path/to/file.html HTTP/1.0). While this is a non-standard request format, some proxy servers require it.\n    #            var request_fulluri = http_options.request_fulluri || false;\n    #            // The max number of redirects to follow. Value 1 or less means that no redirects are followed.\n    #            var max_redirects = http_options.max_redirects || 20;\n    #            // HTTP protocol version\n    #            var protocol_version = http_options.protocol_version || 1.0;\n    #            // Read timeout in seconds, specified by a float\n    #            var timeout = http_options.timeout || (ini.default_socket_timeout && ini.default_socket_timeout.local_value);\n    #            // Fetch the content even on failure status codes.\n    #            var ignore_errors = http_options.ignore_errors || false;\n    #            \n    if flagNames & OPTS.FILE_TEXT\n      \n      # Overrides how encoding is treated (regardless of what is returned from the server)\n      content_type = \"text/html\"\n      if http_options and http_options[\"phpjs.override\"]\n        \n        # Fix: Could allow for non-HTTP as well\n        # We use this, e.g., in gettext-related functions if character set\n        content_type = http_options[\"phpjs.override\"]\n      \n      #   overridden earlier by bind_textdomain_codeset()\n      else\n        encoding = (ini[\"unicode.stream_encoding\"] and ini[\"unicode.stream_encoding\"].local_value) or \"UTF-8\"\n        \n        # We'll assume a content-type expects its own specified encoding if present\n        # We let any header encoding stand\n        content_type = http_options.header.match(/^content-type:\\s*(.*)$/i)[1]  if http_options and http_options.header and (/^content-type:/i).test(http_options.header)\n        \n        # If no encoding\n        content_type += \"; charset=\" + encoding  unless (/;\\s*charset=/).test(content_type)\n      req.overrideMimeType content_type\n    \n    # Default is FILE_BINARY, but for binary, we apparently deviate from PHP in requiring the flag, since many if not\n    #     most people will also want a way to have it be auto-converted into native JavaScript text instead\n    \n    # Trick at https://developer.mozilla.org/En/Using_XMLHttpRequest to get binary\n    else req.overrideMimeType \"text/plain; charset=x-user-defined\"  if flagNames & OPTS.FILE_BINARY\n    \n    # Getting an individual byte then requires:\n    # throw away high-order byte (f7) where x is 0 to responseText.length-1 (see notes in our substr())\n    # responseText.charCodeAt(x) & 0xFF;\n    try\n      if http_options and http_options[\"phpjs.sendAsBinary\"]\n        \n        # For content sent in a POST or PUT request (use with file_put_contents()?)\n        # In Firefox, only available FF3+\n        req.sendAsBinary content\n      else\n        req.send content\n    catch e\n      \n      # catches exception reported in issue #66\n      return false\n    tmp = req.getAllResponseHeaders()\n    if tmp\n      tmp = tmp.split(\"\\n\")\n      k = 0\n      while k < tmp.length\n        newTmp.push tmp[k]  if func(tmp[k])\n        k++\n      tmp = newTmp\n      i = 0\n      while i < tmp.length\n        headers[i] = tmp[i]\n        i++\n      \n      # see http://php.net/manual/en/reserved.variables.httpresponseheader.php\n      @$http_response_header = headers\n    if offset or maxLen\n      return req.responseText.substr(offset or 0, maxLen)  if maxLen\n      return req.responseText.substr(offset)\n    return req.responseText\n  false\n\nphp.file_exists = file_exists = (url) ->\n  \n  # http://kevin.vanzonneveld.net\n  # +   original by: Enrique Gonzalez\n  # +      input by: Jani Hartikainen\n  # +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  # %        note 1: This function uses XmlHttpRequest and cannot retrieve resource from different domain.\n  # %        note 1: Synchronous so may lock up browser, mainly here for study purposes.\n  # *     example 1: file_exists('http://kevin.vanzonneveld.net/pj_test_supportfile_1.htm');\n  # *     returns 1: '123'\n  req = (if window.ActiveXObject then new ActiveXObject(\"Microsoft.XMLHTTP\") else new XMLHttpRequest())\n  throw new Error(\"XMLHttpRequest not supported\")  unless req\n  \n  # HEAD Results are usually shorter (faster) than GET\n  req.open \"HEAD\", url, false\n  req.send null\n  return true  if req.status is 200\n  false\n  \nphp.implode = implode = (glue, pieces) ->\n  \n  #  discuss at: http://phpjs.org/functions/implode/\n  # original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  # improved by: Waldo Malqui Silva\n  # improved by: Itsacon (http://www.itsacon.net/)\n  # bugfixed by: Brett Zamir (http://brett-zamir.me)\n  #   example 1: implode(' ', ['Kevin', 'van', 'Zonneveld']);\n  #   returns 1: 'Kevin van Zonneveld'\n  #   example 2: implode(' ', {first:'Kevin', last: 'van Zonneveld'});\n  #   returns 2: 'Kevin van Zonneveld'\n  i = \"\"\n  retVal = \"\"\n  tGlue = \"\"\n  if arguments_.length is 1\n    pieces = glue\n    glue = \"\"\n  if typeof pieces is \"object\"\n    return pieces.join(glue)  if Object::toString.call(pieces) is \"[object Array]\"\n    for i of pieces\n      retVal += tGlue + pieces[i]\n      tGlue = glue\n    return retVal\n  pieces\n\nphp.explode = explode = (delimiter, string, limit) ->\n  \n  #  discuss at: http://phpjs.org/functions/explode/\n  # original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  #   example 1: explode(' ', 'Kevin van Zonneveld');\n  #   returns 1: {0: 'Kevin', 1: 'van', 2: 'Zonneveld'}\n  return null  if arguments_.length < 2 or typeof delimiter is \"undefined\" or typeof string is \"undefined\"\n  return false  if delimiter is \"\" or delimiter is false or delimiter is null\n  return 0: \"\"  if typeof delimiter is \"function\" or typeof delimiter is \"object\" or typeof string is \"function\" or typeof string is \"object\"\n  delimiter = \"1\"  if delimiter is true\n  \n  # Here we go...\n  delimiter += \"\"\n  string += \"\"\n  s = string.split(delimiter)\n  return s  if typeof limit is \"undefined\"\n  \n  # Support for limit\n  limit = 1  if limit is 0\n  \n  # Positive limit\n  if limit > 0\n    return s  if limit >= s.length\n    return s.slice(0, limit - 1).concat([s.slice(limit - 1).join(delimiter)])\n  \n  # Negative limit\n  return []  if -limit >= s.length\n  s.splice s.length + limit\n  s\n\nphp.array_keys = array_keys = (input, search_value, argStrict) ->\n  \n  #  discuss at: http://phpjs.org/functions/array_keys/\n  # original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  #    input by: Brett Zamir (http://brett-zamir.me)\n  #    input by: P\n  # bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  # bugfixed by: Brett Zamir (http://brett-zamir.me)\n  # improved by: jd\n  # improved by: Brett Zamir (http://brett-zamir.me)\n  #   example 1: array_keys( {firstname: 'Kevin', surname: 'van Zonneveld'} );\n  #   returns 1: {0: 'firstname', 1: 'surname'}\n  search = typeof search_value isnt \"undefined\"\n  tmp_arr = []\n  strict = !!argStrict\n  include = true\n  key = \"\"\n  \n  # Duck-type check for our own array()-created PHPJS_Array\n  return input.keys(search_value, argStrict)  if input and typeof input is \"object\" and input.change_key_case\n  for key of input\n    if input.hasOwnProperty(key)\n      include = true\n      if search\n        if strict and input[key] isnt search_value\n          include = false\n        else include = false  unless input[key] is search_value\n      tmp_arr[tmp_arr.length] = key  if include\n  tmp_arr\n\nphp.in_array = in_array = (needle, haystack, argStrict) ->\n  \n  #  discuss at: http://phpjs.org/functions/in_array/\n  # original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  # improved by: vlado houba\n  # improved by: Jonas Sciangula Street (Joni2Back)\n  #    input by: Billy\n  # bugfixed by: Brett Zamir (http://brett-zamir.me)\n  #   example 1: in_array('van', ['Kevin', 'van', 'Zonneveld']);\n  #   returns 1: true\n  #   example 2: in_array('vlado', {0: 'Kevin', vlado: 'van', 1: 'Zonneveld'});\n  #   returns 2: false\n  #   example 3: in_array(1, ['1', '2', '3']);\n  #   example 3: in_array(1, ['1', '2', '3'], false);\n  #   returns 3: true\n  #   returns 3: true\n  #   example 4: in_array(1, ['1', '2', '3'], true);\n  #   returns 4: false\n  key = \"\"\n  strict = !!argStrict\n  \n  #we prevent the double check (strict && arr[key] === ndl) || (!strict && arr[key] == ndl)\n  #in just one for, in order to improve the performance \n  #deciding wich type of comparation will do before walk array\n  if strict\n    for key of haystack\n      return true  if haystack[key] is needle\n  else\n    for key of haystack\n      return true  if haystack[key] is needle\n  false\n\nphp.sort = sort = (inputArr, sort_flags) ->\n  \n  #  discuss at: http://phpjs.org/functions/sort/\n  # original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  #  revised by: Brett Zamir (http://brett-zamir.me)\n  # improved by: Brett Zamir (http://brett-zamir.me)\n  #        note: SORT_STRING (as well as natsort and natcasesort) might also be\n  #        note: integrated into all of these functions by adapting the code at\n  #        note: http://sourcefrog.net/projects/natsort/natcompare.js\n  #        note: This function deviates from PHP in returning a copy of the array instead\n  #        note: of acting by reference and returning true; this was necessary because\n  #        note: IE does not allow deleting and re-adding of properties without caching\n  #        note: of property position; you can set the ini of \"phpjs.strictForIn\" to true to\n  #        note: get the PHP behavior, but use this only if you are in an environment\n  #        note: such as Firefox extensions where for-in iteration order is fixed and true\n  #        note: property deletion is supported. Note that we intend to implement the PHP\n  #        note: behavior by default if IE ever does allow it; only gives shallow copy since\n  #        note: is by reference in PHP anyways\n  #        note: Since JS objects' keys are always strings, and (the\n  #        note: default) SORT_REGULAR flag distinguishes by key type,\n  #        note: if the content is a numeric string, we treat the\n  #        note: \"original type\" as numeric.\n  #  depends on: i18n_loc_get_default\n  #   example 1: var arr = ['Kevin', 'van', 'Zonneveld']\n  #   example 1: sort(arr);\n  #   example 1: $result = arr;\n  #   returns 1: ['Kevin', 'Zonneveld', 'van']\n  #   example 2: ini_set('phpjs.strictForIn', true);\n  #   example 2: fruits = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'};\n  #   example 2: sort(fruits);\n  #   example 2: $result = fruits;\n  #   returns 2: {0: 'apple', 1: 'banana', 2: 'lemon', 3: 'orange'}\n  valArr = []\n  keyArr = []\n  k = \"\"\n  i = 0\n  sorter = false\n  that = this\n  strictForIn = false\n  populateArr = []\n  switch sort_flags\n    when \"SORT_STRING\"\n      \n      # compare items as strings\n      sorter = (a, b) ->\n        that.strnatcmp a, b\n    when \"SORT_LOCALE_STRING\"\n      \n      # compare items as strings, original by the current locale (set with  i18n_loc_set_default() as of PHP6)\n      loc = @i18n_loc_get_default()\n      sorter = @php_js.i18nLocales[loc].sorting\n    when \"SORT_NUMERIC\"\n      \n      # compare items numerically\n      sorter = (a, b) ->\n        a - b\n    when \"SORT_REGULAR\"\n    \n    # compare items normally (don't change types)\n    else\n      sorter = (a, b) ->\n        aFloat = parseFloat(a)\n        bFloat = parseFloat(b)\n        aNumeric = aFloat + \"\" is a\n        bNumeric = bFloat + \"\" is b\n        if aNumeric and bNumeric\n          return (if aFloat > bFloat then 1 else (if aFloat < bFloat then -1 else 0))\n        else if aNumeric and not bNumeric\n          return 1\n        else return -1  if not aNumeric and bNumeric\n        (if a > b then 1 else (if a < b then -1 else 0))\n  \n  # BEGIN REDUNDANT\n  try\n    @php_js = @php_js or {}\n  catch e\n    @php_js = {}\n  @php_js.ini = @php_js.ini or {}\n  \n  # END REDUNDANT\n  strictForIn = @php_js.ini[\"phpjs.strictForIn\"] and @php_js.ini[\"phpjs.strictForIn\"].local_value and @php_js.ini[\"phpjs.strictForIn\"].local_value isnt \"off\"\n  populateArr = (if strictForIn then inputArr else populateArr)\n  for k of inputArr\n    \n    # Get key and value arrays\n    if inputArr.hasOwnProperty(k)\n      valArr.push inputArr[k]\n      delete inputArr[k]  if strictForIn\n  valArr.sort sorter\n  i = 0\n  while i < valArr.length\n    \n    # Repopulate the old array\n    populateArr[i] = valArr[i]\n    i++\n  strictForIn or populateArr\n\nphp.method_exists = method_exists = (obj, method) ->\n  \n  # http://kevin.vanzonneveld.net\n  # +   original by: Brett Zamir (http://brett-zamir.me)\n  # *     example 1: function class_a() {this.meth1 = function () {return true;}};\n  # *     example 1: var instance_a = new class_a();\n  # *     example 1: method_exists(instance_a, 'meth1');\n  # *     returns 1: true\n  # *     example 2: function class_a() {this.meth1 = function () {return true;}};\n  # *     example 2: var instance_a = new class_a();\n  # *     example 2: method_exists(instance_a, 'meth2');\n  # *     returns 2: false\n  return window[obj] and typeof window[obj][method] is \"function\"  if typeof obj is \"string\"\n  typeof obj[method] is \"function\"\n\nphp.is_object = is_object = (mixed_var) ->\n  \n  #  discuss at: http://phpjs.org/functions/is_object/\n  # original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  # improved by: Legaev Andrey\n  # improved by: Michael White (http://getsprink.com)\n  #   example 1: is_object('23');\n  #   returns 1: false\n  #   example 2: is_object({foo: 'bar'});\n  #   returns 2: true\n  #   example 3: is_object(null);\n  #   returns 3: false\n  return false  if Object::toString.call(mixed_var) is \"[object Array]\"\n  mixed_var isnt null and typeof mixed_var is \"object\""]}