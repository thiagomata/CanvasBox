{"version":3,"sources":["Something.coffee"],"names":[],"mappings":"AA8BU","file":"Something.js","sourceRoot":"/source/","sourcesContent":["# instaceObject = (->\n#   F = (args) ->\n#     copy = []\n#     F:: = (window[args[\"0\"]])::\n#     window[args[\"0\"]].apply this, args[\"1\"]\n#   ->\n#     new F(arguments)\n# )()\n\n\n# ##\n# # Allow to load some necessary class without instance it\n# #\n# # @author Thiago Henrique Ramos da Mata <thiago.henrique.mata@gmail.com>\n# ##\n# class Load\n\n\n# ##\n# # Allow to load some necessary class and instance it\n# #\n# # @author Thiago Henrique Ramos da Mata <thiago.henrique.mata@gmail.com>\n# ##\n# class Instance\n#     constructor:(@objTree, @packageName = null)->\n#         if( @objTree.src? )\n#             this.run = ->\n#                 window.Dog = class Dog\n#                     constructor:(@name)->\n#                         console.log(\"hi #{@name}\")\n#                 console.log( \"loading \" + objTree.src );\n#                 #require_once(objTree.src);\n#                 return instaceObject(@packageName, arguments);\n#         else\n#             for packageName of objTree\n#                 this[packageName] = new Instance(objTree[packageName],packageName);\n\n# Instance.PATH_TREE = '<%= global.paths.dest.scripts %>tree.json'\n\n# Instance::construct=(klass,args)->\n#   ObjectPointer = ->\n#     klass.apply(this, arguments[0]);\n#   ObjectPointer.prototype = klass.prototype; \n#   return new ObjectPointer(args);\n\n# window.New = new Instance( {\n#     Dog: {src:1}}); "]}