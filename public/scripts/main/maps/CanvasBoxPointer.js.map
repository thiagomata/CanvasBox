{"version":3,"sources":["CanvasBoxPointer.coffee"],"names":[],"mappings":"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","file":"CanvasBoxPointer.js","sourceRoot":"/source/","sourcesContent":["##\n# Pointer of Polygonal creation\n# @author Thiago Henrique Ramos da Mata <thiago.henrique.mata@gmail.com>\n##\nclass CanvasBoxPointer\n\n    ##\n    # Class Name\n    ##\n    strClassName = \"CanvasBoxPointer\"\n\n    ##\n    # Horizontal positon of the pointer RELATIVE to the CanvasBoxPolygon\n    #\n    # This position is relative to the x,y to the CanvasBoxPolygon, don't go\n    # crasy if this has some negative value\n    #\n    # @type double\n    ##\n    x: 0\n\n    ##\n    # Horizontal positon of the pointer RELATIVE to the CanvasBoxElement\n    #\n    # This position is relative to the x,y to the CanvasBoxPolygon, don't go\n    # crasy if this has some negative value\n    #\n    # @type double\n    ##\n    y: 0\n\n    ##\n    # Line between this pointer and the next pointer will have this width into\n    # the parent Polygon\n    #\n    # If not defined will be the polygon attribe value\n    #\n    # @type integer\n    ##\n    lineWidth: null\n\n    ##\n    # Stroke style between this pointer and the next pointer into the parent \n    # Polygon\n    #\n    # If not defined will be the polygon attribe value\n    #\n    # @type string\n    ##\n    strokeStyle: null\n\n    ##\n    # Bezier curve parameters of the control 1 pointer\n    # @param Position {x,y}\n    ##\n    objControl1: {x: 0; y:0}\n\n    ##\n    # Bezier curve parameters of the control 2 pointer\n    # This positions are relatives to the Pointer position\n    #\n    # @param Position {x,y}\n    ##\n    objControl2: {x: 0; y:0}\n\n    ##\n    # initialize the pointer parameters\n    ##\n    constructor:(objParams = null )->\n        if( objParams? )\n            @x = objParams.x if objParams.x?\n            @y = objParams.y if objParams.y?\n            @objControl1.x = objParams.x1 if objParams.x1?\n            @objControl1.y = objParams.y1 if objParams.y1?\n            @objControl2.x = objParams.x2 if objParams.x2?\n            @objControl2.y = objParams.y2 if objParams.y2?\n            @strokeStyle = objParams.strokeStyle if objParams.strokeStyle?\n            @lineWidth = objParams.lineWidth if objParams.lineWidth?\n\n    ##\n    # Serialize the important data of this element\n    # return Object\n    ##\n    toSerialize:->\n        return {\n               x: @x\n               y: @y\n               x1: @objControl1.x\n               y1: @objControl1.y\n               x2: @objControl2.x\n               y2: @objControl2.y\n               lineWidth: @lineWidth\n               strokeStyle: @strokeStyle\n            }\n        \n    ##\n    # Return true if some one of the control pointer has some value not 0\n    #\n    # This means we should draw some curved bezier and not just a simple line\n    ##\n    hasSomeBezierControl:->\n        return  ( @objControl1.x != 0 ) ||\n                ( @objControl1.y != 0 ) ||\n                ( @objControl2.x != 0 ) ||\n                ( @objControl2.y != 0 )\n    \n    round:( dblPercent = 50 )->\n        @objControl1.x = 10;\n        @objControl1.y = 10;\n#        @objControl1.x = @x * dblPercent / 100;\n#        @objControl1.y = @y * dblPercent / 100;\n#        @objControl2.x = @x * (100 - dblPercent) / 100;\n#        @objControl2.y = @y * (100 - dblPercent) / 100;\n\n    rotatePoint:( objPoint , dblAngle  )->\n        intNewPositionX =  ( Math.cos( dblAngle  ) * objPoint.x - Math.sin( -dblAngle ) * objPoint.y );\n        intNewPositionY = -( Math.cos( dblAngle  ) * objPoint.y - Math.sin(  dblAngle ) * objPoint.x );\n        return { x: intNewPositionX , y: intNewPositionY }\n\n    rotate:( dblAngle )->\n        return false\n        objPointRotate = @rotatePoint( this , dblAngle );\n        objPointControl1 = @rotatePoint( @objControl1 , dblAngle );\n        objPointControl2 = @rotatePoint( @objControl2 , dblAngle );\n        return New.CanvasBoxPointer({\n            x: objPointRotate.x\n            y: objPointRotate.y\n            x1: objPointControl1.x\n            y1: objPointControl1.y\n            x2: objPointControl2.x\n            y2: objPointControl2.y\n            lineWidth: @lineWidth\n            strokeStyle: @strokeStyle\n        });\n\n    toString:->\n        @x = Math.round(@x);\n        @y = Math.round(@y);\n        return \"[#{@x},#{@y}]\";"]}