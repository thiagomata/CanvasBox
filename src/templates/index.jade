<!DOCTYPE html>
html(lang="en")
head
    meta(charset="UTF-8")
    title Collision, Create and Destroy objects
    script(type='text/javascript', src='http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js')
    <%= scripts.imports( 'scripts.main' ) %>
body
div
  h1  This is a simple demo of how to use canvas box 
  p
    | This example focus into how to create, change and destroy many
    | objects without big coding work. It shows too, how to manipulate
    | the canvas box to override native events.
  p
    canvas#myCanvas
    script
      | $(document).ready( function(){
      |   /*
      |   * add the square in the load map
      |   */
      |   New.prototype.addMap( "Bubble",
      |   "Bubble" );
      |   /*
      |   * create the canvas box
      |   */
      |   var objBox = New.CanvasBox( "myCanvas" , 510 );
      |   objBox.setBackgroundColor("#DDDDFF");
      |   objBox.getPosition();
      |   objBox.onBoxClick = function onBoxClick( event )
      |   {
      |     var objBubble = New.Bubble();
      |     objBubble.x = this.mouseX;
      |     objBubble.y = this.mouseY;
      |     this.addElement( objBubble );
      |     return CanvasBox.prototype.onBoxClick.bind( this )( event );
      |   };
      | 
      |   window.loopTimer = function loopTimer()
      |  {
      |    if( objBox.arrElements.length > 10 )
      |    {
      |      return false;
      |    }
      | 
      |     if (Math.floor( Math.random() * 5 ) == 1 )
      |     {
      |       var objBubble = New.Bubble();
      |       objBubble.x = Math.floor( Math.random() * objBox.width );
      |       objBubble.y = objBox.height - Math.floor( Math.random() * objBox.height / 8 );
      |       objBox.addElement( objBubble );
      |     }
      |   }
      |   /*
      |   * play the box
      |   */
      |   objBox.play();
      |   setInterval( 'window.loopTimer()' , 50 );
      | })
  div#log

